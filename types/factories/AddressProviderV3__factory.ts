/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressProviderV3,
  AddressProviderV3Interface,
} from "../AddressProviderV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_acl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotFoundException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "value",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "SetAddress",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getACL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    name: "getAddressOrRevert",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractsRegister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataCompressor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGearToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveragedActions",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWETHGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
      {
        internalType: "bool",
        name: "saveVersion",
        type: "bool",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161084b38038061084b83398101604081905261002f916100ca565b60405161012c9030906f20a2222922a9a9afa82927ab24a222a960811b9060008051602061082b83398151915290600090a4610073621050d360ea1b826000610079565b506100fa565b60008381526020818152604080832084845290915280822080546001600160a01b0319166001600160a01b03861690811790915590518392869160008051602061082b8339815191529190a4505050565b6000602082840312156100dc57600080fd5b81516001600160a01b03811681146100f357600080fd5b9392505050565b610722806101096000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806377532ed91161008c578063b76b70d511610066578063b76b70d514610183578063be99a980146101c1578063c513c9bb146101d6578063fca513a8146101de57600080fd5b806377532ed91461016b5780639068a86814610173578063affd92431461017b57600080fd5b806344b88563116100c857806344b88563146101315780634c252f911461013957806354fd4d501461014157806357b5a1c61461015857600080fd5b8063060678c2146100ef578063087376951461012157806326c74fc314610129575b600080fd5b6100f76101e6565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f7610218565b6100f7610245565b6100f7610272565b6100f761029f565b61014a61012c81565b604051908152602001610118565b6100f7610166366004610621565b6102c8565b6100f7610333565b6100f7610360565b6100f761038d565b6100f7610191366004610621565b600060208181529281526040808220909352908152205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d46101cf366004610654565b6103ba565b005b6100f761044c565b6100f7610479565b60006102137f444154415f434f4d50524553534f52000000000000000000000000000000000060026102c8565b905090565b60006102137f41434c000000000000000000000000000000000000000000000000000000000060006102c8565b60006102137f545245415355525900000000000000000000000000000000000000000000000060006102c8565b60006102137f524f55544552000000000000000000000000000000000000000000000000000060016102c8565b60006102137f574554485f544f4b454e0000000000000000000000000000000000000000000060005b60008281526020818152604080832084845290915290205473ffffffffffffffffffffffffffffffffffffffff168061032d576040517faf58e23c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60006102137f574554485f47415445574159000000000000000000000000000000000000000060016102c8565b60006102137f4143434f554e545f464143544f5259000000000000000000000000000000000060006102c8565b60006102137f474541525f544f4b454e0000000000000000000000000000000000000000000060006102c8565b6103c26104a6565b6104478383836103d3576000610599565b8473ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044291906106af565b610599565b505050565b60006102137f434f4e5452414354535f5245474953544552000000000000000000000000000060016102c8565b60006102137f50524943455f4f5241434c45000000000000000000000000000000000000000060026102c8565b6104d17f41434c000000000000000000000000000000000000000000000000000000000060006102c8565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9190911690635f259aba90602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056191906106c8565b610597576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008381526020818152604080832084845290915280822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86169081179091559051839286917fb0c728d7569a96de0c070aa765819f6e665acbc3d4fa293440dd65c8c3e8b5ff9190a4505050565b6000806040838503121561063457600080fd5b50508035926020909101359150565b801515811461065157600080fd5b50565b60008060006060848603121561066957600080fd5b83359250602084013573ffffffffffffffffffffffffffffffffffffffff8116811461069457600080fd5b915060408401356106a481610643565b809150509250925092565b6000602082840312156106c157600080fd5b5051919050565b6000602082840312156106da57600080fd5b81516106e581610643565b939250505056fea26469706673582212206a5a827f77ba86946fa6f0a3e8d200b3f899e23516f200ad850780c2601f203364736f6c63430008110033b0c728d7569a96de0c070aa765819f6e665acbc3d4fa293440dd65c8c3e8b5ff";

type AddressProviderV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressProviderV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressProviderV3__factory extends ContractFactory {
  constructor(...args: AddressProviderV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AddressProviderV3";
  }

  override deploy(
    _acl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressProviderV3> {
    return super.deploy(_acl, overrides || {}) as Promise<AddressProviderV3>;
  }
  override getDeployTransaction(
    _acl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_acl, overrides || {});
  }
  override attach(address: string): AddressProviderV3 {
    return super.attach(address) as AddressProviderV3;
  }
  override connect(signer: Signer): AddressProviderV3__factory {
    return super.connect(signer) as AddressProviderV3__factory;
  }
  static readonly contractName: "AddressProviderV3";

  public readonly contractName: "AddressProviderV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressProviderV3Interface {
    return new utils.Interface(_abi) as AddressProviderV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressProviderV3 {
    return new Contract(address, _abi, signerOrProvider) as AddressProviderV3;
  }
}

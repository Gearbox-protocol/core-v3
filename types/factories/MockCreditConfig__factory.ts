/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockCreditConfig,
  MockCreditConfigInterface,
} from "../MockCreditConfig";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TokensTestSuite",
        name: "tokenTestSuite_",
        type: "address",
      },
      {
        internalType: "enum Tokens",
        name: "_underlying",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_tokenTestSuite",
    outputs: [
      {
        internalType: "contract TokensTestSuite",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "excludedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "liquidationThreshold",
            type: "uint16",
          },
        ],
        internalType: "struct CollateralToken[]",
        name: "collateralTokens",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreditOpts",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "minDebt",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "maxDebt",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "liquidationThreshold",
                type: "uint16",
              },
            ],
            internalType: "struct CollateralToken[]",
            name: "collateralTokens",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "degenNFT",
            type: "address",
          },
          {
            internalType: "bool",
            name: "expirable",
            type: "bool",
          },
        ],
        internalType: "struct CreditManagerOpts",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Tokens",
        name: "",
        type: "uint8",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDebt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDebt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifactSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "targetedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingSymbol",
    outputs: [
      {
        internalType: "enum Tokens",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008054600160ff1991821681179092556004805490911690911790553480156200002e57600080fd5b50604051620019e9380380620019e9833981016040819052620000519162000334565b601f805482919060ff60a01b1916600160a01b83606581111562000079576200007962000376565b02179055506040516367b4264560e01b81526001600160a01b038316906367b4264590620000ac9084906004016200038c565b602060405180830381865afa158015620000ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f09190620003b5565b601e80546001600160a01b0319166001600160a01b039290921691909117905560006200011c6200024d565b905062000128620002db565b601b80546001600160801b0319166001600160801b03929092169190911790556200015581600a620003dc565b601b80546001600160801b03928316600160801b029216919091179055601c80546001600160a01b0385166001600160a01b031990911681179091556040516367b4264560e01b81526367b4264590620001b590600f906004016200038c565b602060405180830381865afa158015620001d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f99190620003b5565b601f80546001600160a01b03929092166001600160a01b031983168117825584926001600160a81b03191617600160a01b8360658111156200023f576200023f62000376565b021790555050505062000408565b60006006601f54600160a01b900460ff16606581111562000272576200027262000376565b14620002c557600c601f54600160a01b900460ff1660658111156200029b576200029b62000376565b14620002bb57620002b6670de0b6b3a764000060c8620003dc565b905090565b506404a817c80090565b620002b6670de0b6b3a7640000614e20620003dc565b6000600c601f54600160a01b900460ff16606581111562000300576200030062000376565b14620003135750670de0b6b3a764000090565b50620f424090565b6001600160a01b03811681146200033157600080fd5b50565b600080604083850312156200034857600080fd5b825162000355816200031b565b6020840151909250606681106200036b57600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b6020810160668310620003af57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215620003c857600080fd5b8151620003d5816200031b565b9392505050565b80820281158282048414176200040257634e487b7160e01b600052601160045260246000fd5b92915050565b6115d180620004186000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806385226c81116100cd578063d0064c0011610081578063e20c9f7111610066578063e20c9f711461036c578063f17336d714610374578063fa7626d41461039057600080fd5b8063d0064c00146102e9578063d90a730e1461033a57600080fd5b8063b5508aa9116100b2578063b5508aa9146102b4578063b58eb63f146102bc578063ba414fa6146102d157600080fd5b806385226c8114610297578063916a17c6146102ac57600080fd5b80633f7286f41161012457806366d9a9a01161010957806366d9a9a01461024d5780636f307dc31461026257806381e9bc2f1461028257600080fd5b80633f7286f4146102255780634b57b0be1461022d57600080fd5b80631080c7cf116101555780631080c7cf146101f25780631ed7831c146102085780633e5e3c231461021d57600080fd5b80630b31c20b146101715780630c75f806146101bb575b600080fd5b601c546101919073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101df6101c9366004610fc2565b601d6020526000908152604090205461ffff1681565b60405161ffff90911681526020016101b2565b6101fa61039d565b6040519081526020016101b2565b610210610441565b6040516101b29190610fea565b6102106104b0565b61021061051d565b601f546101919073ffffffffffffffffffffffffffffffffffffffff1681565b61025561058a565b6040516101b29190611044565b601e546101919073ffffffffffffffffffffffffffffffffffffffff1681565b61028a61069b565b6040516101b2919061119a565b61029f610726565b6040516101b2919061123c565b6102556107f6565b61029f6108fe565b6102c46109ce565b6040516101b291906112f2565b6102d9610df5565b60405190151581526020016101b2565b601b546103199070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b6040516fffffffffffffffffffffffffffffffff90911681526020016101b2565b601f5461035f9074010000000000000000000000000000000000000000900460ff1681565b6040516101b29190611334565b610210610f55565b601b54610319906fffffffffffffffffffffffffffffffff1681565b6000546102d99060ff1681565b60006006601f5474010000000000000000000000000000000000000000900460ff1660658111156103d0576103d0611305565b1461042d57600c601f5474010000000000000000000000000000000000000000900460ff16606581111561040657610406611305565b146104235761041e670de0b6b3a764000060c86113a4565b905090565b506404a817c80090565b61041e670de0b6b3a7640000614e206113a4565b6060600d8054806020026020016040519081016040528092919081815260200182805480156104a657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161047b575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156104a65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161047b575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156104a65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161047b575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561069257600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561067a57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106275790505b505050505081525050815260200190600101906105ae565b50505050905090565b6040805160a081018252600080825260208201819052606092820183905291810182905260808101919091526040805160a081018252601b546fffffffffffffffffffffffffffffffff80821683527001000000000000000000000000000000009091041660208201529081016107106109ce565b8152600060208201819052604090910152919050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610692578382906000526020600020018054610769906113c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610795906113c1565b80156107e25780601f106107b7576101008083540402835291602001916107e2565b820191906000526020600020905b8154815290600101906020018083116107c557829003601f168201915b50505050508152602001906001019061074a565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561069257600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156108e657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108935790505b5050505050815250508152602001906001019061081a565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610692578382906000526020600020018054610941906113c1565b80601f016020809104026020016040519081016040528092919081815260200182805461096d906113c1565b80156109ba5780601f1061098f576101008083540402835291602001916109ba565b820191906000526020600020905b81548152906001019060200180831161099d57829003601f168201915b505050505081526020019060010190610922565b6040805161014081018252600c6101008201908152612328610120830152815281518083018352600d815261226060208281019190915280830191909152825180840184526006815261206c8183018190528385019190915283518085018552600f8152808301919091526060808401919091528351808501855260098152611c848184018190526080850191909152845180860186526005815280840182905260a0850152845180860186526013815280840182905260c08501528451808601909552601185529184019190915260e0820192909252610190610ab56096612710611414565b610abf9190611414565b601f54601d9060009074010000000000000000000000000000000000000000900460ff166065811115610af457610af4611305565b6065811115610b0557610b05611305565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff929092169190911790556008610b53600182611436565b67ffffffffffffffff811115610b6b57610b6b611449565b604051908082528060200260200182016040528015610bb057816020015b6040805180820190915260008082526020820152815260200190600190039081610b895790505b5092506000805b82811015610dee57601f5474010000000000000000000000000000000000000000900460ff166065811115610bee57610bee611305565b848260088110610c0057610c00611478565b6020020151516065811115610c1757610c17611305565b14610ddc57838160088110610c2e57610c2e611478565b602002015160200151601d6000868460088110610c4d57610c4d611478565b6020020151516065811115610c6457610c64611305565b6065811115610c7557610c75611305565b81526020810191909152604090810160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff93909316929092179091558051808201909152601c54819073ffffffffffffffffffffffffffffffffffffffff166367b42645878560088110610cf357610cf3611478565b6020020151516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152610d329190600401611334565b602060405180830381865afa158015610d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7391906114a7565b73ffffffffffffffffffffffffffffffffffffffff168152602001858360088110610da057610da0611478565b60200201516020015161ffff16815250858381518110610dc257610dc2611478565b60200260200101819052508180610dd8906114dd565b9250505b80610de6816114dd565b915050610bb7565b5050505090565b60008054610100900460ff1615610e155750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f505760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610eba917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611515565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610ef29161155d565b6000604051808303816000865af19150503d8060008114610f2f576040519150601f19603f3d011682016040523d82523d6000602084013e610f34565b606091505b5091505080806020019051810190610f4c9190611579565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156104a65760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161047b575050505050905090565b600060208284031215610fd457600080fd5b813560668110610fe357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561103857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611006565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561112b578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156111165783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906110d4565b50978a0197955050509187019160010161106c565b50919998505050505050505050565b600081518084526020808501945080840160005b8381101561118f578151805173ffffffffffffffffffffffffffffffffffffffff16885283015161ffff16838801526040909601959082019060010161114e565b509495945050505050565b6020815260006fffffffffffffffffffffffffffffffff80845116602084015280602085015116604084015250604083015160a060608401526111e060c084018261113a565b905073ffffffffffffffffffffffffffffffffffffffff60608501511660808401526080840151151560a08401528091505092915050565b60005b8381101561123357818101518382015260200161121b565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156112e5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452815180518087526112a8818989018a8501611218565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01695909501860194509285019290850190600101611263565b5092979650505050505050565b602081526000610fe3602083018461113a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016066831061136f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176113bb576113bb611375565b92915050565b600181811c908216806113d557607f821691505b60208210810361140e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61ffff82811682821603908082111561142f5761142f611375565b5092915050565b818103818111156113bb576113bb611375565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156114b957600080fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610fe357600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361150e5761150e611375565b5060010190565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161154f816004850160208701611218565b919091016004019392505050565b6000825161156f818460208701611218565b9190910192915050565b60006020828403121561158b57600080fd5b81518015158114610fe357600080fdfea264697066735822122024185150dce556b47c6d4194edbc96269389b51d866a65041e566f45f68ef7fc64736f6c63430008110033";

type MockCreditConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCreditConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCreditConfig__factory extends ContractFactory {
  constructor(...args: MockCreditConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockCreditConfig";
  }

  override deploy(
    tokenTestSuite_: PromiseOrValue<string>,
    _underlying: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCreditConfig> {
    return super.deploy(
      tokenTestSuite_,
      _underlying,
      overrides || {}
    ) as Promise<MockCreditConfig>;
  }
  override getDeployTransaction(
    tokenTestSuite_: PromiseOrValue<string>,
    _underlying: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenTestSuite_,
      _underlying,
      overrides || {}
    );
  }
  override attach(address: string): MockCreditConfig {
    return super.attach(address) as MockCreditConfig;
  }
  override connect(signer: Signer): MockCreditConfig__factory {
    return super.connect(signer) as MockCreditConfig__factory;
  }
  static readonly contractName: "MockCreditConfig";

  public readonly contractName: "MockCreditConfig";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCreditConfigInterface {
    return new utils.Interface(_abi) as MockCreditConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCreditConfig {
    return new Contract(address, _abi, signerOrProvider) as MockCreditConfig;
  }
}

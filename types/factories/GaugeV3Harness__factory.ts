/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GaugeV3Harness,
  GaugeV3HarnessInterface,
} from "../GaugeV3Harness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gearStaking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotControllerException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotVoterException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectParameterException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "AddQuotaToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "SetFrozenEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "SetQuotaTokenParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "lpSide",
        type: "bool",
      },
    ],
    name: "Unvote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "epochNow",
        type: "uint16",
      },
    ],
    name: "UpdateEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "lpSide",
        type: "bool",
      },
    ],
    name: "Vote",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "addQuotaToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "changeQuotaTokenRateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLastUpdate",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRates",
    outputs: [
      {
        internalType: "uint16[]",
        name: "rates",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quotaRateParams",
    outputs: [
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
      {
        internalType: "uint96",
        name: "totalVotesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "totalVotesCaSide",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setFrozenEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
      {
        internalType: "uint96",
        name: "totalVotesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "totalVotesCaSide",
        type: "uint96",
      },
    ],
    name: "setQuotaRateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "votesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "votesCaSide",
        type: "uint96",
      },
    ],
    name: "setUserTokenVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "unvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTokenVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "votesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "votesCaSide",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526000805461ff0019166101001790553480156200002057600080fd5b506040516200242a3803806200242a833981810160405260408110156200004657600080fd5b50805160209182015160408051630a55006360e21b8152905192939192849284926001600160a01b03851692632954018c926004808401939192918290030181865afa1580156200009b573d6000803e3d6000fd5b505050506040513d6020811015620000b257600080fd5b50518080620000c1816200027e565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801562000113573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001399190620002a9565b6001600160a01b031660808190526000805460ff1916905560408051638da5cb5b60e01b81529051919350638da5cb5b92506004808201926020929091908290030181865afa15801562000191573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b79190620002a9565b600080546001600160a01b0392909216620100000262010000600160b01b03199092169190911790555080620001ed816200027e565b6001600160a01b0380841660a052821660c081905260408051635cbeecf160e11b8152905163b97dd9e2916004808201926020929091908290030181865afa1580156200023e573d6000803e3d6000fd5b505050506040513d60208110156200025557600080fd5b50516003805462ffffff191661ffff909216919091176201000017905550620002db9350505050565b6001600160a01b038116620002a657604051635919af9760e11b815260040160405180910390fd5b50565b600060208284031215620002bc57600080fd5b81516001600160a01b0381168114620002d457600080fd5b9392505050565b60805160a05160c0516120ee6200033c600039600081816104f70152818161115301526115c00152600081816102f301528181610a0601526115360152600081816108c901528181611d3e01528181611dfa0152611ee401526120ee6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806367bd79a2116100e3578063cc10ad861161008c578063f77c479111610066578063f77c47911461090a578063f953482814610930578063fb832c711461094357600080fd5b8063cc10ad8614610818578063de287359146108c4578063ed519474146108eb57600080fd5b80639872ddb0116100bd5780639872ddb01461064a5780639ca5922814610787578063a36532b2146107cc57600080fd5b806367bd79a21461054f5780638456cb591461060f57806392eefe9b1461061757600080fd5b806336f4fb021161014557806346c96aac1161011f57806346c96aac146104f257806354fd4d50146105195780635c975abb1461053457600080fd5b806336f4fb02146104425780633c4f98ac1461044a5780633f4ba83a146104ea57600080fd5b806316f0115b1161017657806316f0115b146102ee5780631d7ec7611461033e578063359cd5bf146103fd57600080fd5b80630b64762214610192578063102418f31461024c575b600080fd5b610211600480360360208110156101a857600080fd5b50600160205273ffffffffffffffffffffffffffffffffffffffff9035166000908152604090205461ffff80821691620100008104909116906bffffffffffffffffffffffff640100000000820481169170010000000000000000000000000000000090041684565b6040805161ffff95861681529390941660208401526bffffffffffffffffffffffff9182168385015216606082015290519081900360800190f35b6102ec6004803603606081101561026257600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916bffffffffffffffffffffffff602082013516918101906060810160408201356401000000008111156102ad57600080fd5b8201836020820111156102bf57600080fd5b803590602001918460018302840111640100000000831117156102e157600080fd5b509092509050610968565b005b6103157f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102ec6004803603608081101561035457600080fd5b506040805180820182526bffffffffffffffffffffffff838301358116825260608401358116602080840191825273ffffffffffffffffffffffffffffffffffffffff863581166000908152600283528681209783013590911681529590529290932090518154925184166c01000000000000000000000000027fffffffffffffffff000000000000000000000000000000000000000000000000909316931692909217179055565b6102ec6004803603606081101561041357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169061ffff602082013581169160400135166109ba565b6102ec610d5f565b6102ec6004803603606081101561046057600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916bffffffffffffffffffffffff602082013516918101906060810160408201356401000000008111156104ab57600080fd5b8201836020820111156104bd57600080fd5b803590602001918460018302840111640100000000831117156104df57600080fd5b509092509050610d69565b6102ec610db3565b6103157f000000000000000000000000000000000000000000000000000000000000000081565b61052261012c81565b60408051918252519081900360200190f35b60005460ff165b604080519115158252519081900360200190f35b6105bf6004803603602081101561056557600080fd5b81019060208101813564010000000081111561058057600080fd5b82018360208201111561059257600080fd5b803590602001918460208302840111640100000000831117156105b457600080fd5b509092509050610dc3565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156105fb5781810151838201526020016105e3565b505050509050019250505060405180910390f35b6102ec610fd3565b6102ec6004803603602081101561062d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fe3565b6102ec600480360360a081101561066057600080fd5b50604080516080808201835261ffff602085810135821684528585013582168185019081526bffffffffffffffffffffffff606080890135821687890190815295890135821690870190815273ffffffffffffffffffffffffffffffffffffffff9835989098166000908152600190935295909120935184549151935196518616700100000000000000000000000000000000027fffffffff000000000000000000000000ffffffffffffffffffffffffffffffff9790961664010000000002969096167fffffffff000000000000000000000000000000000000000000000000ffffffff93831662010000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009092169690921695909517949094171692909217179055565b6102ec6004803603606081101561079d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169061ffff60208201358116916040013516611089565b61053b600480360360208110156107e257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205462010000900461ffff16151590565b61088b6004803603604081101561082e57600080fd5b506002602090815273ffffffffffffffffffffffffffffffffffffffff8235811660009081526040808220845292909301351682529020546bffffffffffffffffffffffff808216916c0100000000000000000000000090041682565b60405180836bffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff1681526020019250505060405180910390f35b6103157f000000000000000000000000000000000000000000000000000000000000000081565b6102ec6004803603602081101561090157600080fd5b503515156110ac565b6000546103159062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60035461053b9062010000900460ff1681565b6003546109519061ffff1681565b6040805161ffff9092168252519081900360200190f35b61097061113b565b6000808383604081101561098357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516925060200135151590506109b2868684846111aa565b505050505050565b826109c481611453565b6109cc6114a0565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090205462010000900461ffff16151580610aa357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d6020811015610a8557600080fd5b505173ffffffffffffffffffffffffffffffffffffffff8581169116145b15610ada576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ae483836114df565b6040805160808101825261ffff8581168252848116602080840191825260008486018181526060860182815273ffffffffffffffffffffffffffffffffffffffff8c1683526001909352958120945185549351965192519085167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090941693909317620100009690941695909502929092177fffffffff000000000000000000000000000000000000000000000000ffffffff166401000000006bffffffffffffffffffffffff938416027fffffffff000000000000000000000000ffffffffffffffffffffffffffffffff16177001000000000000000000000000000000009290911691909102179055610bf7611532565b90508073ffffffffffffffffffffffffffffffffffffffff1663d9b94b06866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa158015610c65573d6000803e3d6000fd5b505050506040513d6020811015610c7b57600080fd5b5051610d03578073ffffffffffffffffffffffffffffffffffffffff1663364395ee866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610cea57600080fd5b505af1158015610cfe573d6000803e3d6000fd5b505050505b6040805161ffff808716825285166020820152815173ffffffffffffffffffffffffffffffffffffffff8816927f26ed208f71237782f945612371d1e179300898e965c647fd1d23c97bdc973812928290030190a25050505050565b610d676115bc565b565b610d7161113b565b60008083836040811015610d8457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516925060200135151590506109b286868484611735565b610dbb6119de565b610d67611a1d565b6060818067ffffffffffffffff811115610ddf57610ddf611f82565b604051908082528060200260200182016040528015610e08578160200160208202803683370190505b50915060005b81811015610fcb576000858583818110610e2a57610e2a611fb1565b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050610e828173ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205461ffff6201000090910416151590565b610eb8576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160209081526040918290208251608081018452905461ffff808216835262010000820416928201929092526bffffffffffffffffffffffff64010000000083048116938201849052700100000000000000000000000000000000909204821660608201819052909291818301168015610f905780836bffffffffffffffffffffffff16856020015161ffff1602836bffffffffffffffffffffffff16866000015161ffff16020181610f8a57610f8a611fe0565b04610f93565b83515b888781518110610fa557610fa5611fb1565b602002602001019061ffff16908161ffff16815250505050505050806001019050610e0e565b505092915050565b610fdb611a9a565b610d67611ad9565b610feb6114a0565b60005473ffffffffffffffffffffffffffffffffffffffff82811662010000909204161461108657600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff841690810291909117825560405190917fe253457d9ad994ca9682fc3bbc38c890dca73a2d5ecee3809e548bac8b00d7c691a25b50565b8261109381611453565b61109b611b34565b6110a6848484611b9f565b50505050565b6110b46114a0565b600360029054906101000a900460ff1615158115151461108657600380548215156201000081027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff9092169190911790915560408051918252517fa60fade018f4d462a5daa5f95377789f4577d1e71865ab6f46e65c8bcfd91d5b9181900360200190a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d67576040517fed9cd2af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205462010000900461ffff16611210576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112186115bc565b73ffffffffffffffffffffffffffffffffffffffff80831660008181526001602090815260408083209489168352600282528083209383529290522082156113105781548590839060049061128490849064010000000090046bffffffffffffffffffffffff1661203e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550848160000160008282829054906101000a90046bffffffffffffffffffffffff166112dd919061203e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506113ce565b81548590839060109061134690849070010000000000000000000000000000000090046bffffffffffffffffffffffff1661203e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508481600001600c8282829054906101000a90046bffffffffffffffffffffffff1661139f919061203e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fb4cfba462215396ee513d049a336a7a90798f99a4c100a605f6f5b76c9f47d21878660405180836bffffffffffffffffffffffff16815260200182151581526020019250505060405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116611086576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114a933611cf6565b610d67576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff821615806114f757508061ffff168261ffff16115b1561152e576040517f47fbaa9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663be8da14b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561159f573d6000803e3d6000fd5b505050506040513d60208110156115b557600080fd5b5051919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b97dd9e26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611629573d6000803e3d6000fd5b505050506040513d602081101561163f57600080fd5b505160035490915061ffff908116908216111561108657600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff8316179081905562010000900460ff166116fb5761169b611532565b73ffffffffffffffffffffffffffffffffffffffff16633c3821f46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116e257600080fd5b505af11580156116f6573d6000803e3d6000fd5b505050505b6040805161ffff8316815290517f44301d5732d11f39569dd7cfde533dacce079da5aa37171ab8a9cbf098818b529181900360200190a150565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205462010000900461ffff1661179b576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a36115bc565b73ffffffffffffffffffffffffffffffffffffffff808316600081815260016020908152604080832094891683526002825280832093835292905220821561189b5781548590839060049061180f90849064010000000090046bffffffffffffffffffffffff1661206a565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550848160000160008282829054906101000a90046bffffffffffffffffffffffff16611868919061206a565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611959565b8154859083906010906118d190849070010000000000000000000000000000000090046bffffffffffffffffffffffff1661206a565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508481600001600c8282829054906101000a90046bffffffffffffffffffffffff1661192a919061206a565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f720dd6f175f68c73fb470a1d57e611c555e7f963fba76f6b9fa7f75daa59d176878660405180836bffffffffffffffffffffffff16815260200182151581526020019250505060405180910390a3505050505050565b6119e733611db2565b610d67576040517f16e29ab700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a25611e2b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b611aa333611e9c565b610d67576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ae1611f15565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a703390565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314801590611b685750611b6633611cf6565b155b15610d67576040517f0129bb9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205462010000900461ffff16611c05576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c0f82826114df565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020805461ffff8481169116148015611c585750805461ffff8381166201000090920416145b15611c635750505050565b805461ffff8481167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909216821762010000918516918202178355604080519283526020830191909152805173ffffffffffffffffffffffffffffffffffffffff8716927fce0a212664f433711432d2fcd73ba6b7395bc67a540150eecf21c37b71c26b0092908290030190a250505050565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015611d88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dac919061208f565b92915050565b6040517fd4eb5db000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4eb5db090602401611d6b565b60005460ff16610d67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064015b60405180910390fd5b6040517f3a41ec6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a41ec6490602401611d6b565b60005460ff1615610d67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401611e93565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6bffffffffffffffffffffffff8281168282160390808211156120635761206361200f565b5092915050565b6bffffffffffffffffffffffff8181168382160190808211156120635761206361200f565b6000602082840312156120a157600080fd5b815180151581146120b157600080fd5b939250505056fea2646970667358221220411e9d2d31593bddd535d7311bf6c36a2a1755236fb6b5b924712ce1b513a13d64736f6c63430008110033";

type GaugeV3HarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaugeV3HarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaugeV3Harness__factory extends ContractFactory {
  constructor(...args: GaugeV3HarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GaugeV3Harness";
  }

  override deploy(
    _pool: PromiseOrValue<string>,
    _gearStaking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GaugeV3Harness> {
    return super.deploy(
      _pool,
      _gearStaking,
      overrides || {}
    ) as Promise<GaugeV3Harness>;
  }
  override getDeployTransaction(
    _pool: PromiseOrValue<string>,
    _gearStaking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pool, _gearStaking, overrides || {});
  }
  override attach(address: string): GaugeV3Harness {
    return super.attach(address) as GaugeV3Harness;
  }
  override connect(signer: Signer): GaugeV3Harness__factory {
    return super.connect(signer) as GaugeV3Harness__factory;
  }
  static readonly contractName: "GaugeV3Harness";

  public readonly contractName: "GaugeV3Harness";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaugeV3HarnessInterface {
    return new utils.Interface(_abi) as GaugeV3HarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaugeV3Harness {
    return new Contract(address, _abi, signerOrProvider) as GaugeV3Harness;
  }
}

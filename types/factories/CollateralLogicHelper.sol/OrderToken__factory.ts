/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OrderToken,
  OrderTokenInterface,
} from "../../CollateralLogicHelper.sol/OrderToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50336080526080516101b561002f6000396000607901526101b56000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370a082311461003b578063fb1669ca14610060575b600080fd5b61004e610049366004610110565b610075565b60405190815260200160405180910390f35b61007361006e36600461014d565b600055565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636846632a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101069190610166565b5050600054919050565b60006020828403121561012257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461014657600080fd5b9392505050565b60006020828403121561015f57600080fd5b5035919050565b60006020828403121561017857600080fd5b505191905056fea2646970667358221220477fc98481bdb55ff900190e52fc81a14708a9c54eefb290a83f651760a8483564736f6c63430008110033";

type OrderTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderToken__factory extends ContractFactory {
  constructor(...args: OrderTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OrderToken";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderToken> {
    return super.deploy(overrides || {}) as Promise<OrderToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderToken {
    return super.attach(address) as OrderToken;
  }
  override connect(signer: Signer): OrderToken__factory {
    return super.connect(signer) as OrderToken__factory;
  }
  static readonly contractName: "OrderToken";

  public readonly contractName: "OrderToken";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderTokenInterface {
    return new utils.Interface(_abi) as OrderTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderToken {
    return new Contract(address, _abi, signerOrProvider) as OrderToken;
  }
}

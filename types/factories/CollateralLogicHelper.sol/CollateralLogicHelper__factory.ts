/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CollateralLogicHelper,
  CollateralLogicHelperInterface,
} from "../../CollateralLogicHelper.sol/CollateralLogicHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "excludedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saveCallOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifactSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "targetedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008054600160ff1991821681179092556004805490911690911790553480156200002e57600080fd5b50604080516318caf8e360e31b815273f39fd6e51aad88f6f4ce6ab8827279cfffb9226660048083019190915260248201929092526044810191909152632aa9a2a960e11b6064820152600080516020620021428339815191529063c657c71890608401600060405180830381600087803b158015620000ad57600080fd5b505af1158015620000c2573d6000803e3d6000fd5b5050604080516318caf8e360e31b81527390f79bf6eb2c4f870365e785982e1f101e93b90660048201526024810191909152600660448201526511949251539160d21b606482015260008051602062002142833981519152925063c657c7189150608401600060405180830381600087803b1580156200014157600080fd5b505af115801562000156573d6000803e3d6000fd5b5050604080516318caf8e360e31b8152733c44cdddb6a900fa2b585dd299e03d12fa4293bc60048201526024810191909152600a6044820152692624a8aaa4a220aa27a960b11b606482015260008051602062002142833981519152925063c657c7189150608401600060405180830381600087803b158015620001d957600080fd5b505af1158015620001ee573d6000803e3d6000fd5b5050604080516318caf8e360e31b81527323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f60048201526024810191909152600a6044820152690494e495449414c5f4c560b41b606482015260008051602062002142833981519152925063c657c7189150608401600060405180830381600087803b1580156200027157600080fd5b505af115801562000286573d6000803e3d6000fd5b5050604080516318caf8e360e31b815273c4375b7de8af5a38a93548eb8453a498222c4ff260048201526024810191909152600c60448201526b44554d425f4144445245535360a01b606482015260008051602062002142833981519152925063c657c7189150608401600060405180830381600087803b1580156200030b57600080fd5b505af115801562000320573d6000803e3d6000fd5b5050604080516318caf8e360e31b8152739965507d1a55bcc2695c58ba16fb37d819b0a4dc60048201526024810191909152600760448201526620a220a82a22a960c91b606482015260008051602062002142833981519152925063c657c7189150608401600060405180830381600087803b158015620003a057600080fd5b505af1158015620003b5573d6000803e3d6000fd5b505050506000620003d06200045060201b620009071760201c565b805190915060005b81811015620004475762000434838281518110620003fa57620003fa62000ac6565b6020026020010151600001518483815181106200041b576200041b62000ac6565b602002602001015160200151836200087760201b60201c565b6200043f8162000af2565b9050620003d8565b50505062000d31565b604080516101c081019091526060906000908061012081018060068152604080518082018252600381526244414960e81b6020828101919091528301526012908201526305f5e1006060820152608001600081525081526020016040518060a00160405280600c6065811115620004cb57620004cb62000b0e565b815260408051808201825260048152635553444360e01b6020828101919091528301526006908201526305f5e1006060820152608001600081525081526020016040518060a00160405280600f60658111156200052c576200052c62000b0e565b815260408051808201825260048152630ae8aa8960e31b6020828101919091528301526012908201526060016200056a6103e86305f5e10062000b24565b8152602001600081525081526020016040518060a00160405280600960658111156200059a576200059a62000b0e565b815260408051808201825260048152634c494e4b60e01b6020828101919091528301526012908201526359682f006060820152608001600081525081526020016040518060a00160405280600d6065811115620005fb57620005fb62000b0e565b815260408051808201825260048152631554d11560e21b602082810191909152830152601290820152633b0233806060820152608001600081525081526020016040518060a00160405280601160658111156200065c576200065c62000b0e565b815260408051808201825260058152640e6e88aa8960db1b602082810191909152830152601290820152644cd58864006060820152608001600081525081526020016040518060a0016040528060056065811115620006bf57620006bf62000b0e565b8152604080518082018252600381526221a92b60e91b6020828101919091528301526012908201526308583b006060820152608001600081525081526020016040518060a00160405280601360658111156200071f576200071f62000b0e565b81526040805180820182526003815262086acb60eb1b6020828101919091528301526012908201526329b927006060820152608001600081525081526020016040518060a00160405280601260658111156200077f576200077f62000b0e565b815260408051808201825260068152650eee6e88aa8960d31b602080830191909152830152601281830152644cd58864006060830152600060809092019190915291528051600980825261014082019092529192509081816020015b6200080c6040805160a081018252600080825260606020830181905292820181905291810182905290608082015290565b815260200190600190039081620007db57905050925060005b81811015620008715782816009811062000843576200084362000ac6565b60200201518482815181106200085d576200085d62000ac6565b602090810291909101015260010162000825565b50505090565b6000604051620008879062000ab8565b604051809103906000f080158015620008a4573d6000803e3d6000fd5b5090508060216000866065811115620008c157620008c162000b0e565b6065811115620008d557620008d562000b0e565b81526020808201929092526040908101600090812080546001600160a01b0319166001600160a01b03958616179055928416835260239091529020805485919060ff1916600183606581111562000930576200093062000b0e565b0217905550600160ff83161b80601f600087606581111562000956576200095662000b0e565b60658111156200096a576200096a62000b0e565b815260208082019290925260409081016000908120939093558383529080529020805486919060ff19166001836065811115620009ab57620009ab62000b0e565b02179055508360226000876065811115620009ca57620009ca62000b0e565b6065811115620009de57620009de62000b0e565b81526020019081526020016000209081620009fa919062000c05565b506000805160206200214283398151915263c657c7186021600088606581111562000a295762000a2962000b0e565b606581111562000a3d5762000a3d62000b0e565b8152602081019190915260409081016000205490516001600160e01b031960e084901b16815262000a7d916001600160a01b031690889060040162000cd1565b600060405180830381600087803b15801562000a9857600080fd5b505af115801562000aad573d6000803e3d6000fd5b505050505050505050565b6101e48062001f5e83390190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000b075762000b0762000adc565b5060010190565b634e487b7160e01b600052602160045260246000fd5b80820260008212600160ff1b8414161562000b435762000b4362000adc565b818105831482151762000b5a5762000b5a62000adc565b92915050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000b8b57607f821691505b60208210810362000bac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000c0057600081815260208120601f850160051c8101602086101562000bdb5750805b601f850160051c820191505b8181101562000bfc5782815560010162000be7565b5050505b505050565b81516001600160401b0381111562000c215762000c2162000b60565b62000c398162000c32845462000b76565b8462000bb2565b602080601f83116001811462000c71576000841562000c585750858301515b600019600386901b1c1916600185901b17855562000bfc565b600085815260208120601f198616915b8281101562000ca25788860151825594840194600190910190840162000c81565b508582101562000cc15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000d0f5785810183015185820160600152820162000cf1565b506000606082860101526060601f19601f830116850101925050509392505050565b61121d8062000d416000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806385226c8111610081578063ba414fa61161005b578063ba414fa61461014c578063e20c9f7114610164578063fa7626d41461016c57600080fd5b806385226c8114610127578063916a17c61461013c578063b5508aa91461014457600080fd5b80633f7286f4116100b25780633f7286f4146100f457806366d9a9a0146100fc5780636846632a1461011157600080fd5b80631ed7831c146100ce5780633e5e3c23146100ec575b600080fd5b6100d6610179565b6040516100e39190610deb565b60405180910390f35b6100d66101e8565b6100d6610255565b6101046102c2565b6040516100e39190610e45565b6101196103d3565b6040519081526020016100e3565b61012f610492565b6040516100e39190610f5f565b610104610562565b61012f61066a565b61015461073a565b60405190151581526020016100e3565b6100d661089a565b6000546101549060ff1681565b6060600d8054806020026020016040519081016040528092919081815260200182805480156101de57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101b3575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156101de5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101b3575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156101de5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101b3575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156103ca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156103b257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161035f5790505b505050505081525050815260200190600101906102e6565b50505050905090565b3360009081526023602052604081205460ff16818160658111156103f9576103f9611015565b03610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e636f727265637420746f6b656e73206f7264657200000000000000000000604482015260640160405180910390fd5b600081606581111561047857610478611015565b610483906064611073565b90508054604051818152602081f35b60606011805480602002602001604051908101604052809291908181526020016000905b828210156103ca5783829060005260206000200180546104d59061108c565b80601f01602080910402602001604051908101604052809291908181526020018280546105019061108c565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b5050505050815260200190600101906104b6565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156103ca57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561065257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116105ff5790505b50505050508152505081526020019060010190610586565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156103ca5783829060005260206000200180546106ad9061108c565b80601f01602080910402602001604051908101604052809291908181526020018280546106d99061108c565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b50505050508152602001906001019061068e565b60008054610100900460ff161561075a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108955760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916107ff917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016110df565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261083791611127565b6000604051808303816000865af19150503d8060008114610874576040519150601f19603f3d011682016040523d82523d6000602084013e610879565b606091505b50915050808060200190518101906108919190611143565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156101de5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101b3575050505050905090565b604080516101c081019091526060906000908061012081018060068152604080518082018252600381527f44414900000000000000000000000000000000000000000000000000000000006020828101919091528301526012908201526305f5e1006060820152608001600081525081526020016040518060a00160405280600c606581111561099957610999611015565b8152604080518082018252600481527f55534443000000000000000000000000000000000000000000000000000000006020828101919091528301526006908201526305f5e1006060820152608001600081525081526020016040518060a00160405280600f6065811115610a1057610a10611015565b8152604080518082018252600481527f5745544800000000000000000000000000000000000000000000000000000000602082810191909152830152601290820152606001610a656103e86305f5e10061116c565b8152602001600081525081526020016040518060a0016040528060096065811115610a9257610a92611015565b8152604080518082018252600481527f4c494e4b000000000000000000000000000000000000000000000000000000006020828101919091528301526012908201526359682f006060820152608001600081525081526020016040518060a00160405280600d6065811115610b0957610b09611015565b8152604080518082018252600481527f5553445400000000000000000000000000000000000000000000000000000000602082810191909152830152601290820152633b0233806060820152608001600081525081526020016040518060a0016040528060116065811115610b8057610b80611015565b8152604080518082018252600581527f7374455448000000000000000000000000000000000000000000000000000000602082810191909152830152601290820152644cd58864006060820152608001600081525081526020016040518060a0016040528060056065811115610bf857610bf8611015565b8152604080518082018252600381527f43525600000000000000000000000000000000000000000000000000000000006020828101919091528301526012908201526308583b006060820152608001600081525081526020016040518060a0016040528060136065811115610c6f57610c6f611015565b8152604080518082018252600381527f43565800000000000000000000000000000000000000000000000000000000006020828101919091528301526012908201526329b927006060820152608001600081525081526020016040518060a0016040528060126065811115610ce657610ce6611015565b8152604080518082018252600681527f7773744554480000000000000000000000000000000000000000000000000000602080830191909152830152601281830152644cd58864006060830152600060809092019190915291528051600980825261014082019092529192509081816020015b610d896040805160a081018252600080825260606020830181905292820181905291810182905290608082015290565b815260200190600190039081610d5957905050925060005b81811015610de557828160098110610dbb57610dbb6111b8565b6020020151848281518110610dd257610dd26111b8565b6020908102919091010152600101610da1565b50505090565b6020808252825182820181905260009190848201906040850190845b81811015610e3957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610e07565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610f2c578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015610f175783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190610ed5565b50978a01979550505091870191600101610e6d565b50919998505050505050505050565b60005b83811015610f56578181015183820152602001610f3e565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611008577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845281518051808752610fcb818989018a8501610f3b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01695909501860194509285019290850190600101610f86565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561108657611086611044565b92915050565b600181811c908216806110a057607f821691505b6020821081036110d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251611119816004850160208701610f3b565b919091016004019392505050565b60008251611139818460208701610f3b565b9190910192915050565b60006020828403121561115557600080fd5b8151801515811461116557600080fd5b9392505050565b808202600082127f8000000000000000000000000000000000000000000000000000000000000000841416156111a4576111a4611044565b818105831482151761108657611086611044565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122093619b5ddb0483776f958581a43bdbb00231c4394240881a568872e854f63bb564736f6c6343000811003360a060405234801561001057600080fd5b50336080526080516101b561002f6000396000607901526101b56000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370a082311461003b578063fb1669ca14610060575b600080fd5b61004e610049366004610110565b610075565b60405190815260200160405180910390f35b61007361006e36600461014d565b600055565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636846632a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101069190610166565b5050600054919050565b60006020828403121561012257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461014657600080fd5b9392505050565b60006020828403121561015f57600080fd5b5035919050565b60006020828403121561017857600080fd5b505191905056fea2646970667358221220477fc98481bdb55ff900190e52fc81a14708a9c54eefb290a83f651760a8483564736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d";

type CollateralLogicHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollateralLogicHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollateralLogicHelper__factory extends ContractFactory {
  constructor(...args: CollateralLogicHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CollateralLogicHelper";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CollateralLogicHelper> {
    return super.deploy(overrides || {}) as Promise<CollateralLogicHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CollateralLogicHelper {
    return super.attach(address) as CollateralLogicHelper;
  }
  override connect(signer: Signer): CollateralLogicHelper__factory {
    return super.connect(signer) as CollateralLogicHelper__factory;
  }
  static readonly contractName: "CollateralLogicHelper";

  public readonly contractName: "CollateralLogicHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralLogicHelperInterface {
    return new utils.Interface(_abi) as CollateralLogicHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollateralLogicHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CollateralLogicHelper;
  }
}

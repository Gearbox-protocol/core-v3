/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ICreditConfig, ICreditConfigInterface } from "../ICreditConfig";

const _abi = [
  {
    inputs: [],
    name: "getAccountAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "liquidationThreshold",
            type: "uint16",
          },
        ],
        internalType: "struct CollateralToken[]",
        name: "collateralTokens",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreditOpts",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "minDebt",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "maxDebt",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "liquidationThreshold",
                type: "uint16",
              },
            ],
            internalType: "struct CollateralToken[]",
            name: "collateralTokens",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "degenNFT",
            type: "address",
          },
          {
            internalType: "bool",
            name: "expirable",
            type: "bool",
          },
        ],
        internalType: "struct CreditManagerOpts",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDebt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDebt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICreditConfig__factory {
  static readonly abi = _abi;
  static createInterface(): ICreditConfigInterface {
    return new utils.Interface(_abi) as ICreditConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICreditConfig {
    return new Contract(address, _abi, signerOrProvider) as ICreditConfig;
  }
}

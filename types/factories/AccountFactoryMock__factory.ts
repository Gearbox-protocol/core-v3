/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountFactoryMock,
  AccountFactoryMockInterface,
} from "../AccountFactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_version",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "excludedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "returnCreditAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnedAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "takeCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifactSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "targetedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usedAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506040516117f33803806117f383398101604081905261004c91610136565b60405161005890610129565b604051809103906000f080158015610074573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03929092169182179055601b829055604080516318caf8e360e31b815260048101929092526024820152600e60448201526d10d49151125517d050d0d3d5539560921b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561010b57600080fd5b505af115801561011f573d6000803e3d6000fd5b505050505061014f565b6109a080610e5383390190565b60006020828403121561014857600080fd5b5051919050565b610cf58061015e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806385226c8111610097578063b5508aa911610066578063b5508aa914610259578063ba414fa614610261578063e20c9f7114610279578063fa7626d41461028157600080fd5b806385226c81146101c557806389b77b3e146101da578063916a17c6146102315780639d8714481461023957600080fd5b80633f7286f4116100d35780633f7286f41461017157806354fd4d501461017957806366d9a9a01461019057806369ed1069146101a557600080fd5b80631ed7831c146100fa57806321d18456146101185780633e5e3c2314610169575b600080fd5b61010261028e565b60405161010f919061095d565b60405180910390f35b6101446101263660046109b7565b5050601c5473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b6101026102fd565b61010261036a565b610182601b5481565b60405190815260200161010f565b6101986103d7565b60405161010f91906109d9565b601c546101449073ffffffffffffffffffffffffffffffffffffffff1681565b6101cd6104e8565b60405161010f9190610af3565b61022f6101e8366004610ba9565b601d80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b6101986105b8565b601d546101449073ffffffffffffffffffffffffffffffffffffffff1681565b6101cd6106c0565b610269610790565b604051901515815260200161010f565b6101026108f0565b6000546102699060ff1681565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102f357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c8575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c8575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c8575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104df57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156104c757602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104745790505b505050505081525050815260200190600101906103fb565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104df57838290600052602060002001805461052b90610be6565b80601f016020809104026020016040519081016040528092919081815260200182805461055790610be6565b80156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b50505050508152602001906001019061050c565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104df57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156106a857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106555790505b505050505081525050815260200190600101906105dc565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156104df57838290600052602060002001805461070390610be6565b80601f016020809104026020016040519081016040528092919081815260200182805461072f90610be6565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b5050505050815260200190600101906106e4565b60008054610100900460ff16156107b05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610855917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c39565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261088d91610c81565b6000604051808303816000865af19150503d80600081146108ca576040519150601f19603f3d011682016040523d82523d6000602084013e6108cf565b606091505b50915050808060200190518101906108e79190610c9d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102f35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c8575050505050905090565b6020808252825182820181905260009190848201906040850190845b818110156109ab57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610979565b50909695505050505050565b600080604083850312156109ca57600080fd5b50508035926020909101359150565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610ac0578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015610aab5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190610a69565b50978a01979550505091870191600101610a01565b50919998505050505050505050565b60005b83811015610aea578181015183820152602001610ad2565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610b9c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845281518051808752610b5f818989018a8501610acf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01695909501860194509285019290850190600101610b1a565b5092979650505050505050565b600060208284031215610bbb57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610bdf57600080fd5b9392505050565b600181811c90821680610bfa57607f821691505b602082108103610c33577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251610c73816004850160208701610acf565b919091016004019392505050565b60008251610c93818460208701610acf565b9190910192915050565b600060208284031215610caf57600080fd5b81518015158114610bdf57600080fdfea26469706673582212206edfb7bfa054737a81e0c3e79b3331b1c4b63ba9729635050a96ef71d910067264736f6c63430008110033608060405234801561001057600080fd5b50610980806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c12c21c01161005b578063c12c21c014610265578063ce8bf51c146102ae578063d1660f9914610316578063e0d4d10e1461035957600080fd5b80631cff79cd1461008d5780633da7798a146101c557806354fd4d501461024257806382f59c761461025d575b600080fd5b610150600480360360408110156100a357600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100db57600080fd5b8201836020820111156100ed57600080fd5b8035906020019184600183028401116401000000008311171561010f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c9945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018a578181015183820152602001610172565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610240600480360360408110156101db57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116600090815260026020908152604080832094820135909316825292909252902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b005b61024b61012c81565b60408051918252519081900360200190f35b610150610515565b6000546102859073ffffffffffffffffffffffffffffffffffffffff1681565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610302600480360360408110156102c457600080fd5b506002602090815273ffffffffffffffffffffffffffffffffffffffff82358116600090815260408082208452929093013516825290205460ff1681565b604080519115158252519081900360200190f35b6102406004803603606081101561032c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356105a3565b6102406004803603602081101561036f57600080fd5b81019060208101813564010000000081111561038a57600080fd5b82018360208201111561039c57600080fd5b803590602001918460018302840111640100000000831117156103be57600080fd5b50909250905061074d565b60607f2505ea5af21fd5bc6d2cf6c89e11505902bf7e33a2f0af2195e429da277909fd8383604051808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561044757818101518382015260200161042f565b50505050905090810190601f1680156104745780820380516001836020036101000a031916815260200191505b50935050505060405180910390a16001805461048f9061075f565b80601f01602080910402602001604051908101604052809291908181526020018280546104bb9061075f565b80156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b5050505050905092915050565b600180546105229061075f565b80601f016020809104026020016040519081016040528092919081815260200182805461054e9061075f565b801561059b5780601f106105705761010080835404028352916020019161059b565b820191906000526020600020905b81548152906001019060200180831161057e57829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526002602090815260408083209386168352929052205460ff161561064557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f546f6b656e207472616e73666572207265766572746564000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83163b156106f1578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506020604051808303816000875af11580156106d8573d6000803e3d6000fd5b505050506040513d60208110156106ee57600080fd5b50505b6040805173ffffffffffffffffffffffffffffffffffffffff80861682528416602082015280820183905290517ffd89bae87c8ae499e0252e334e8ee027b80e445013c3e37800b86e8fd87129f09181900360600190a1505050565b600161075a82848361082f565b505050565b600181811c9082168061077357607f821691505b6020821081036107ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f82111561075a57600081815260208120601f850160051c810160208610156108085750805b601f850160051c820191505b8181101561082757828155600101610814565b505050505050565b67ffffffffffffffff831115610847576108476107b2565b61085b83610855835461075f565b836107e1565b6000601f8411600181146108ad57600085156108775750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610943565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156108fc57868501358255602094850194600190920191016108dc565b5086821015610937577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea2646970667358221220b6687ad2ec5a3b972e1f6abbb3fc400d056c4480694ce7f27fb276f7135bd44d64736f6c63430008110033";

type AccountFactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountFactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountFactoryMock__factory extends ContractFactory {
  constructor(...args: AccountFactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AccountFactoryMock";
  }

  override deploy(
    _version: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountFactoryMock> {
    return super.deploy(
      _version,
      overrides || {}
    ) as Promise<AccountFactoryMock>;
  }
  override getDeployTransaction(
    _version: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_version, overrides || {});
  }
  override attach(address: string): AccountFactoryMock {
    return super.attach(address) as AccountFactoryMock;
  }
  override connect(signer: Signer): AccountFactoryMock__factory {
    return super.connect(signer) as AccountFactoryMock__factory;
  }
  static readonly contractName: "AccountFactoryMock";

  public readonly contractName: "AccountFactoryMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFactoryMockInterface {
    return new utils.Interface(_abi) as AccountFactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountFactoryMock {
    return new Contract(address, _abi, signerOrProvider) as AccountFactoryMock;
  }
}

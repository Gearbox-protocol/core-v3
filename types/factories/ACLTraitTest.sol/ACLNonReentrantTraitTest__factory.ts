/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ACLNonReentrantTraitTest,
  ACLNonReentrantTraitTestInterface,
} from "../../ACLTraitTest.sol/ACLNonReentrantTraitTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "accessConfiguratorOnly",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessWhenNotPaused",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessWhenPaused",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805461ff00191661010017905534801561001f57600080fd5b506040516108f93803806108f983398101604081905261003e91610191565b80808061004a81610167565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801561009b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bf9190610191565b6001600160a01b031660808190526000805460ff1916905560408051638da5cb5b60e01b81529051919350638da5cb5b92506004808201926020929091908290030181865afa158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a9190610191565b600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555050506101c1565b6001600160a01b03811661018e57604051635919af9760e11b815260040160405180910390fd5b50565b6000602082840312156101a357600080fd5b81516001600160a01b03811681146101ba57600080fd5b9392505050565b6080516107086101f1600039600081816101050152818161050d015281816105c9015261064201526107086000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638456cb591161007657806392eefe9b1161005b57806392eefe9b146100ed578063de28735914610100578063f77c47911461014c57600080fd5b80638456cb59146100dd5780638def0c0b146100e557600080fd5b806319df69ae146100a85780633f4ba83a146100b257806350a472ae146100ba5780635c975abb146100c2575b600080fd5b6100b0610172565b005b6100b061017c565b6100b061018c565b60005460ff1660405190151581526020015b60405180910390f35b6100b0610194565b6100b06101a4565b6100b06100fb366004610673565b6101ac565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d4565b6000546101279062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b61017a610252565b565b610184610291565b61017a6102d0565b61017a61034d565b61019c6103bf565b61017a6103fe565b61017a610459565b6101b4610252565b60005473ffffffffffffffffffffffffffffffffffffffff82811662010000909204161461024f57600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff841690810291909117825560405190917fe253457d9ad994ca9682fc3bbc38c890dca73a2d5ecee3809e548bac8b00d7c691a25b50565b61025b336104c5565b61017a576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61029a33610581565b61017a576040517f16e29ab700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d8610459565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60005460ff161561017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064015b60405180910390fd5b6103c8336105fa565b61017a576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040661034d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586103233390565b60005460ff1661017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016103b6565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906106b0565b92915050565b6040517fd4eb5db000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4eb5db09060240161053a565b6040517f3a41ec6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a41ec649060240161053a565b60006020828403121561068557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106a957600080fd5b9392505050565b6000602082840312156106c257600080fd5b815180151581146106a957600080fdfea26469706673582212209528b5247148b7535d2cd72616613151ea6b5fc763386d21f6356375871f0f8764736f6c63430008110033";

type ACLNonReentrantTraitTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ACLNonReentrantTraitTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ACLNonReentrantTraitTest__factory extends ContractFactory {
  constructor(...args: ACLNonReentrantTraitTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ACLNonReentrantTraitTest";
  }

  override deploy(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ACLNonReentrantTraitTest> {
    return super.deploy(
      addressProvider,
      overrides || {}
    ) as Promise<ACLNonReentrantTraitTest>;
  }
  override getDeployTransaction(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addressProvider, overrides || {});
  }
  override attach(address: string): ACLNonReentrantTraitTest {
    return super.attach(address) as ACLNonReentrantTraitTest;
  }
  override connect(signer: Signer): ACLNonReentrantTraitTest__factory {
    return super.connect(signer) as ACLNonReentrantTraitTest__factory;
  }
  static readonly contractName: "ACLNonReentrantTraitTest";

  public readonly contractName: "ACLNonReentrantTraitTest";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ACLNonReentrantTraitTestInterface {
    return new utils.Interface(_abi) as ACLNonReentrantTraitTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ACLNonReentrantTraitTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ACLNonReentrantTraitTest;
  }
}

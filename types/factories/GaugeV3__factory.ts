/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GaugeV3, GaugeV3Interface } from "../GaugeV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gearStaking",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotControllerException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotVoterException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectParameterException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "AddQuotaToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "SetFrozenEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "SetQuotaTokenParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "lpSide",
        type: "bool",
      },
    ],
    name: "Unvote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "epochNow",
        type: "uint16",
      },
    ],
    name: "UpdateEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "lpSide",
        type: "bool",
      },
    ],
    name: "Vote",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "addQuotaToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
    ],
    name: "changeQuotaTokenRateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLastUpdate",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRates",
    outputs: [
      {
        internalType: "uint16[]",
        name: "rates",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quotaRateParams",
    outputs: [
      {
        internalType: "uint16",
        name: "minRate",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxRate",
        type: "uint16",
      },
      {
        internalType: "uint96",
        name: "totalVotesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "totalVotesCaSide",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setFrozenEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "unvote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTokenVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "votesLpSide",
        type: "uint96",
      },
      {
        internalType: "uint96",
        name: "votesCaSide",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526000805461ff0019166101001790553480156200002057600080fd5b506040516200221038038062002210833981810160405260408110156200004657600080fd5b50805160209182015160408051630a55006360e21b81529051929391926001600160a01b03851692632954018c92600480820193918290030181865afa15801562000095573d6000803e3d6000fd5b505050506040513d6020811015620000ac57600080fd5b50518080620000bb8162000276565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001339190620002a1565b6001600160a01b031660808190526000805460ff1916905560408051638da5cb5b60e01b81529051919350638da5cb5b92506004808201926020929091908290030181865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b19190620002a1565b600080546001600160a01b0392909216620100000262010000600160b01b03199092169190911790555080620001e78162000276565b6001600160a01b0380841660a052821660c081905260408051635cbeecf160e11b8152905163b97dd9e2916004808201926020929091908290030181865afa15801562000238573d6000803e3d6000fd5b505050506040513d60208110156200024f57600080fd5b50516003805462ffffff191661ffff909216919091176201000017905550620002d3915050565b6001600160a01b0381166200029e57604051635919af9760e11b815260040160405180910390fd5b50565b600060208284031215620002b457600080fd5b81516001600160a01b0381168114620002cc57600080fd5b9392505050565b60805160a05160c051611edc620003346000396000818161042201528181610f4101526113ae0152600081816102dd015281816107f401526113240152600081816106b701528181611b2c01528181611be80152611cd20152611edc6000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806367bd79a2116100d8578063cc10ad861161008c578063f77c479111610066578063f77c4791146106f8578063f95348281461071e578063fb832c711461073157600080fd5b8063cc10ad8614610606578063de287359146106b2578063ed519474146106d957600080fd5b806392eefe9b116100bd57806392eefe9b146105425780639ca5922814610575578063a36532b2146105ba57600080fd5b806367bd79a21461047a5780638456cb591461053a57600080fd5b80633c4f98ac1161012f57806346c96aac1161011457806346c96aac1461041d57806354fd4d50146104445780635c975abb1461045f57600080fd5b80633c4f98ac146103755780633f4ba83a1461041557600080fd5b806316f0115b1161016057806316f0115b146102d8578063359cd5bf1461032857806336f4fb021461036d57600080fd5b80630b6476221461017c578063102418f314610236575b600080fd5b6101fb6004803603602081101561019257600080fd5b50600160205273ffffffffffffffffffffffffffffffffffffffff9035166000908152604090205461ffff80821691620100008104909116906bffffffffffffffffffffffff640100000000820481169170010000000000000000000000000000000090041684565b6040805161ffff95861681529390941660208401526bffffffffffffffffffffffff9182168385015216606082015290519081900360800190f35b6102d66004803603606081101561024c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916bffffffffffffffffffffffff6020820135169181019060608101604082013564010000000081111561029757600080fd5b8201836020820111156102a957600080fd5b803590602001918460018302840111640100000000831117156102cb57600080fd5b509092509050610756565b005b6102ff7f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102d66004803603606081101561033e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169061ffff602082013581169160400135166107a8565b6102d6610b4d565b6102d66004803603606081101561038b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916bffffffffffffffffffffffff602082013516918101906060810160408201356401000000008111156103d657600080fd5b8201836020820111156103e857600080fd5b8035906020019184600183028401116401000000008311171561040a57600080fd5b509092509050610b57565b6102d6610ba1565b6102ff7f000000000000000000000000000000000000000000000000000000000000000081565b61044d61012c81565b60408051918252519081900360200190f35b60005460ff165b604080519115158252519081900360200190f35b6104ea6004803603602081101561049057600080fd5b8101906020810181356401000000008111156104ab57600080fd5b8201836020820111156104bd57600080fd5b803590602001918460208302840111640100000000831117156104df57600080fd5b509092509050610bb1565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561052657818101518382015260200161050e565b505050509050019250505060405180910390f35b6102d6610dc1565b6102d66004803603602081101561055857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610dd1565b6102d66004803603606081101561058b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169061ffff60208201358116916040013516610e77565b610466600480360360208110156105d057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205462010000900461ffff16151590565b6106796004803603604081101561061c57600080fd5b506002602090815273ffffffffffffffffffffffffffffffffffffffff8235811660009081526040808220845292909301351682529020546bffffffffffffffffffffffff808216916c0100000000000000000000000090041682565b60405180836bffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff1681526020019250505060405180910390f35b6102ff7f000000000000000000000000000000000000000000000000000000000000000081565b6102d6600480360360208110156106ef57600080fd5b50351515610e9a565b6000546102ff9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b6003546104669062010000900460ff1681565b60035461073f9061ffff1681565b6040805161ffff9092168252519081900360200190f35b61075e610f29565b6000808383604081101561077157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516925060200135151590506107a086868484610f98565b505050505050565b826107b281611241565b6107ba61128e565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604090205462010000900461ffff1615158061089157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085d573d6000803e3d6000fd5b505050506040513d602081101561087357600080fd5b505173ffffffffffffffffffffffffffffffffffffffff8581169116145b156108c8576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108d283836112cd565b6040805160808101825261ffff8581168252848116602080840191825260008486018181526060860182815273ffffffffffffffffffffffffffffffffffffffff8c1683526001909352958120945185549351965192519085167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090941693909317620100009690941695909502929092177fffffffff000000000000000000000000000000000000000000000000ffffffff166401000000006bffffffffffffffffffffffff938416027fffffffff000000000000000000000000ffffffffffffffffffffffffffffffff161770010000000000000000000000000000000092909116919091021790556109e5611320565b90508073ffffffffffffffffffffffffffffffffffffffff1663d9b94b06866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d6020811015610a6957600080fd5b5051610af1578073ffffffffffffffffffffffffffffffffffffffff1663364395ee866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610ad857600080fd5b505af1158015610aec573d6000803e3d6000fd5b505050505b6040805161ffff808716825285166020820152815173ffffffffffffffffffffffffffffffffffffffff8816927f26ed208f71237782f945612371d1e179300898e965c647fd1d23c97bdc973812928290030190a25050505050565b610b556113aa565b565b610b5f610f29565b60008083836040811015610b7257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516925060200135151590506107a086868484611523565b610ba96117cc565b610b5561180b565b6060818067ffffffffffffffff811115610bcd57610bcd611d70565b604051908082528060200260200182016040528015610bf6578160200160208202803683370190505b50915060005b81811015610db9576000858583818110610c1857610c18611d9f565b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050610c708173ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205461ffff6201000090910416151590565b610ca6576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160209081526040918290208251608081018452905461ffff808216835262010000820416928201929092526bffffffffffffffffffffffff64010000000083048116938201849052700100000000000000000000000000000000909204821660608201819052909291818301168015610d7e5780836bffffffffffffffffffffffff16856020015161ffff1602836bffffffffffffffffffffffff16866000015161ffff16020181610d7857610d78611dce565b04610d81565b83515b888781518110610d9357610d93611d9f565b602002602001019061ffff16908161ffff16815250505050505050806001019050610bfc565b505092915050565b610dc9611888565b610b556118c7565b610dd961128e565b60005473ffffffffffffffffffffffffffffffffffffffff828116620100009092041614610e7457600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff841690810291909117825560405190917fe253457d9ad994ca9682fc3bbc38c890dca73a2d5ecee3809e548bac8b00d7c691a25b50565b82610e8181611241565b610e89611922565b610e9484848461198d565b50505050565b610ea261128e565b600360029054906101000a900460ff16151581151514610e7457600380548215156201000081027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff9092169190911790915560408051918252517fa60fade018f4d462a5daa5f95377789f4577d1e71865ab6f46e65c8bcfd91d5b9181900360200190a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b55576040517fed9cd2af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205462010000900461ffff16610ffe576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110066113aa565b73ffffffffffffffffffffffffffffffffffffffff80831660008181526001602090815260408083209489168352600282528083209383529290522082156110fe5781548590839060049061107290849064010000000090046bffffffffffffffffffffffff16611e2c565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550848160000160008282829054906101000a90046bffffffffffffffffffffffff166110cb9190611e2c565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506111bc565b81548590839060109061113490849070010000000000000000000000000000000090046bffffffffffffffffffffffff16611e2c565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508481600001600c8282829054906101000a90046bffffffffffffffffffffffff1661118d9190611e2c565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fb4cfba462215396ee513d049a336a7a90798f99a4c100a605f6f5b76c9f47d21878660405180836bffffffffffffffffffffffff16815260200182151581526020019250505060405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610e74576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61129733611ae4565b610b55576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61ffff821615806112e557508061ffff168261ffff16115b1561131c576040517f47fbaa9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663be8da14b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561138d573d6000803e3d6000fd5b505050506040513d60208110156113a357600080fd5b5051919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b97dd9e26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611417573d6000803e3d6000fd5b505050506040513d602081101561142d57600080fd5b505160035490915061ffff9081169082161115610e7457600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff8316179081905562010000900460ff166114e957611489611320565b73ffffffffffffffffffffffffffffffffffffffff16633c3821f46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156114d057600080fd5b505af11580156114e4573d6000803e3d6000fd5b505050505b6040805161ffff8316815290517f44301d5732d11f39569dd7cfde533dacce079da5aa37171ab8a9cbf098818b529181900360200190a150565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205462010000900461ffff16611589576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115916113aa565b73ffffffffffffffffffffffffffffffffffffffff8083166000818152600160209081526040808320948916835260028252808320938352929052208215611689578154859083906004906115fd90849064010000000090046bffffffffffffffffffffffff16611e58565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550848160000160008282829054906101000a90046bffffffffffffffffffffffff166116569190611e58565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611747565b8154859083906010906116bf90849070010000000000000000000000000000000090046bffffffffffffffffffffffff16611e58565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508481600001600c8282829054906101000a90046bffffffffffffffffffffffff166117189190611e58565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f720dd6f175f68c73fb470a1d57e611c555e7f963fba76f6b9fa7f75daa59d176878660405180836bffffffffffffffffffffffff16815260200182151581526020019250505060405180910390a3505050505050565b6117d533611ba0565b610b55576040517f16e29ab700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611813611c19565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b61189133611c8a565b610b55576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118cf611d03565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861185e3390565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314801590611956575061195433611ae4565b155b15610b55576040517f0129bb9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205462010000900461ffff166119f3576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119fd82826112cd565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020805461ffff8481169116148015611a465750805461ffff8381166201000090920416145b15611a515750505050565b805461ffff8481167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909216821762010000918516918202178355604080519283526020830191909152805173ffffffffffffffffffffffffffffffffffffffff8716927fce0a212664f433711432d2fcd73ba6b7395bc67a540150eecf21c37b71c26b0092908290030190a250505050565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a9190611e7d565b92915050565b6040517fd4eb5db000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4eb5db090602401611b59565b60005460ff16610b55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064015b60405180910390fd5b6040517f3a41ec6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a41ec6490602401611b59565b60005460ff1615610b55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401611c81565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6bffffffffffffffffffffffff828116828216039080821115611e5157611e51611dfd565b5092915050565b6bffffffffffffffffffffffff818116838216019080821115611e5157611e51611dfd565b600060208284031215611e8f57600080fd5b81518015158114611e9f57600080fd5b939250505056fea26469706673582212204008fdc7fb66e2fa74207a20aa72a3640fdce96c14ee8da9e8b5e4bd4e1bcdc864736f6c63430008110033";

type GaugeV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaugeV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaugeV3__factory extends ContractFactory {
  constructor(...args: GaugeV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GaugeV3";
  }

  override deploy(
    _pool: PromiseOrValue<string>,
    _gearStaking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GaugeV3> {
    return super.deploy(
      _pool,
      _gearStaking,
      overrides || {}
    ) as Promise<GaugeV3>;
  }
  override getDeployTransaction(
    _pool: PromiseOrValue<string>,
    _gearStaking: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pool, _gearStaking, overrides || {});
  }
  override attach(address: string): GaugeV3 {
    return super.attach(address) as GaugeV3;
  }
  override connect(signer: Signer): GaugeV3__factory {
    return super.connect(signer) as GaugeV3__factory;
  }
  static readonly contractName: "GaugeV3";

  public readonly contractName: "GaugeV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaugeV3Interface {
    return new utils.Interface(_abi) as GaugeV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaugeV3 {
    return new Contract(address, _abi, signerOrProvider) as GaugeV3;
  }
}

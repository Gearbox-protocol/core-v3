/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PriceOracleV3Harness,
  PriceOracleV3HarnessInterface,
} from "../PriceOracleV3Harness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AddressIsNotContractException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotControllerException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectParameterException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceFeedException",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectTokenContractException",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceFeedDoesNotExistException",
    type: "error",
  },
  {
    inputs: [],
    name: "StalePriceException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "skipCheck",
        type: "bool",
      },
    ],
    name: "SetPriceFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "skipCheck",
        type: "bool",
      },
    ],
    name: "SetReservePriceFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "SetReservePriceFeedStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenFrom",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenTo",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "convertFromUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "convertToUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "skipCheck",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scale",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPriceFeedParams",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "stalenessPeriod",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "skipCheck",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "useReserve",
            type: "bool",
          },
        ],
        internalType: "struct PriceFeedParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "reserve",
        type: "bool",
      },
    ],
    name: "getPriceRaw",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getReservePriceFeedParams",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "stalenessPeriod",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "skipCheck",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "useReserve",
            type: "bool",
          },
        ],
        internalType: "struct PriceFeedParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenReserveKey",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "stalenessPeriod",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "skipCheck",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "useReserve",
            type: "bool",
          },
        ],
        internalType: "struct PriceFeedParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "hackPriceFeedParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "stalenessPeriod",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "skipCheck",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "useReserve",
            type: "bool",
          },
        ],
        internalType: "struct PriceFeedParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "hackReservePriceFeedParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "priceFeedParams",
    outputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "skipCheck",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "reserve",
        type: "bool",
      },
    ],
    name: "priceFeedsRaw",
    outputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
    ],
    name: "setReservePriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setReservePriceFeedStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "stalenessPeriod",
        type: "uint32",
      },
    ],
    name: "validatePriceFeed",
    outputs: [
      {
        internalType: "bool",
        name: "skipCheck",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "validateToken",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805461ff0019166101001790553480156200002057600080fd5b50604051620025c6380380620025c68339810160408190526200004391620001a2565b80808080620000528162000177565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa158015620000a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ca9190620001a2565b6001600160a01b031660808190526000805460ff1916905560408051638da5cb5b60e01b81529051919350638da5cb5b92506004808201926020929091908290030181865afa15801562000122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001489190620001a2565b600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050620001d4565b6001600160a01b0381166200019f57604051635919af9760e11b815260040160405180910390fd5b50565b600060208284031215620001b557600080fd5b81516001600160a01b0381168114620001cd57600080fd5b9392505050565b6080516123c1620002056000396000818161082701528181611ca301528181611dd90152611ebe01526123c16000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80638f8a8aba116100ee578063ccdd1ce311610097578063e51966d711610071578063e51966d714610849578063f77c479114610982578063f9a65030146109a8578063ff299845146109bb57600080fd5b8063ccdd1ce3146107b7578063d87bdda61461080f578063de2873591461082257600080fd5b80639dcb511a116100c85780639dcb511a1461061b578063b66102df1461062e578063c70cbd0a1461064157600080fd5b80638f8a8aba146105d057806392eefe9b146105e35780639532b6ab146105f657600080fd5b80633f4ba83a1161015b5780635c975abb116101355780635c975abb146103f2578063675c5c49146104095780637afb0104146105b55780638456cb59146105c857600080fd5b80633f4ba83a146103c057806341976e09146103c857806354fd4d50146103e957600080fd5b80630b51dadf1161018c5780630b51dadf1461037257806319a3c65f146103855780631b6dfcc0146103ad57600080fd5b80630214433b146101b357806302e44ec2146101c85780630ad70eec1461033a575b600080fd5b6101c66101c1366004611fb0565b6109ce565b005b6102cc6101d6366004611ff3565b6040805160a08082018352600080835260208084018290528385018290526060808501839052608094850183905273ffffffffffffffffffffffffffffffffffffffff968716835260018252918590208551938401865254958616835263ffffffff740100000000000000000000000000000000000000008704169083015260ff78010000000000000000000000000000000000000000000000008604811615159483019490945279010000000000000000000000000000000000000000000000000085048416908201527a01000000000000000000000000000000000000000000000000000090930490911615159082015290565b6040516103319190600060a08201905073ffffffffffffffffffffffffffffffffffffffff835116825263ffffffff602084015116602083015260408301511515604083015260ff606084015116606083015260808301511515608083015292915050565b60405180910390f35b61034d610348366004611ff3565b610c34565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610331565b6101c6610380366004611fb0565b610c6e565b610398610393366004612041565b610f3c565b60408051928352602083019190915201610331565b6101c66103bb366004612099565b610f58565b6101c66110f0565b6103db6103d6366004611ff3565b611102565b604051908152602001610331565b6103db61012c81565b60005460ff165b6040519015158152602001610331565b6101c66104173660046120d0565b604080517f524553455256450000000000000000000000000000000000000000000000000060289490941b939093178352601b90922073ffffffffffffffffffffffffffffffffffffffff90811660009081526001602090815290849020835181549285015195850151606086015160809096015115157a010000000000000000000000000000000000000000000000000000027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff60ff909716790100000000000000000000000000000000000000000000000000027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff921515780100000000000000000000000000000000000000000000000002929092167fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff90991674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090961693909616929092179390931795909516929092171791909116919091179055565b6103db6105c33660046121ca565b611132565b6101c6611181565b6103db6105de366004612099565b611191565b6101c66105f1366004611ff3565b611295565b610609610604366004611ff3565b61133b565b60405160ff9091168152602001610331565b61034d610629366004611ff3565b611346565b6103db61063c3660046121f6565b61135b565b6101c661064f3660046120d0565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604091829020835181549285015193850151606086015160809096015115157a010000000000000000000000000000000000000000000000000000027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff60ff97909716790100000000000000000000000000000000000000000000000000027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff921515780100000000000000000000000000000000000000000000000002929092167fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff90971674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090961693909816929092179390931793909316949094171791909116179055565b6107ca6107c5366004611ff3565b611378565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855263ffffffff90931660208501529015159183019190915260ff166060820152608001610331565b6103f961081d366004612229565b611450565b61034d7f000000000000000000000000000000000000000000000000000000000000000081565b6102cc610857366004611ff3565b6040805160a080820183526000808352602080840182905283850182905260608085018390526080948501839052855160289790971b7f5245534552564500000000000000000000000000000000000000000000000000178752601b90962073ffffffffffffffffffffffffffffffffffffffff908116835260018252918590208551938401865254918216835274010000000000000000000000000000000000000000820463ffffffff16908301527801000000000000000000000000000000000000000000000000810460ff90811615159483019490945279010000000000000000000000000000000000000000000000000081048416948201949094527a01000000000000000000000000000000000000000000000000000090930490911615159082015290565b60005461034d9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b6103db6109b63660046121ca565b611463565b61034d6109c9366004612099565b61149b565b826109d8816114ec565b826109e2816114ec565b6109ea611539565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020526040902054790100000000000000000000000000000000000000000000000000900460ff168015610a3c5780610a45565b610a4586611578565b90506000610a5386866116f2565b90506040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018663ffffffff16815260200182151581526020018360ff16815260200160001515815250600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff02191690831515021790555060608201518160000160196101000a81548160ff021916908360ff160217905550608082015181600001601a6101000a81548160ff0219169083151502179055509050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f54bafe4dd078667ca4498828ef773452f21b7c2b2f71c734bd085cab2a0f4f4b8784604051610c2392919063ffffffff9290921682521515602082015260400190565b60405180910390a350505050505050565b604051602882901b7f5245534552564500000000000000000000000000000000000000000000000000178152601b90206000905b92915050565b82610c78816114ec565b82610c82816114ec565b610c8a611539565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020526040812054790100000000000000000000000000000000000000000000000000900460ff1690819003610d0a576040517f68d8c6d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d1686866116f2565b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff8916815263ffffffff881660208201528215158183015260ff85166060820152600060808201819052915160288b901b7f5245534552564500000000000000000000000000000000000000000000000000178152601b9020929350916001919073ffffffffffffffffffffffffffffffffffffffff9081168252602080830193909352604091820160002084518154868601518786015160608901516080909901519386167fffffffffffffffff000000000000000000000000000000000000000000000000909316929092177401000000000000000000000000000000000000000063ffffffff92831602177fffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000921515929092027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff169190911779010000000000000000000000000000000000000000000000000060ff90981697909702969096177fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000091151591909102179055815193891684528415159284019290925288821692918a16917f0622a3fd57e320160fa23aaad98e12139a7922016875937c646e76237005c01c9101610c23565b600080610f4b868686866119fa565b9150915094509492505050565b610f60611a9a565b604080517f5245534552564500000000000000000000000000000000000000000000000000602885901b178152601b902073ffffffffffffffffffffffffffffffffffffffff90811660009081526001602052919091205416610fef576040517f68d8c6d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff7a010000000000000000000000000000000000000000000000000000909104161515811515146110ec5773ffffffffffffffffffffffffffffffffffffffff82166000818152600160205260409081902080548415157a010000000000000000000000000000000000000000000000000000027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff909116179055517f8065e881e49e3c3c04dadba3c10e1abdd738d4aa4a7807b49dc5d4600ec62885906110e390841515815260200190565b60405180910390a25b5050565b6110f8611b05565b611100611b44565b565b600080600080600061111386611378565b9350935093509350611127848484846119fa565b509695505050505050565b600080600080600061114386611378565b935093509350935060008061115a868686866119fa565b90925090508161116a828b612282565b6111749190612299565b9998505050505050505050565b611189611bc1565b611100611c00565b6000806000806000611225866111a757876111d8565b604051602889901b7f5245534552564500000000000000000000000000000000000000000000000000178152601b90205b73ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020549063ffffffff60a083901c169060ff60c084901c81169160c885901c82169160d086901c1690565b509296509094509250905073ffffffffffffffffffffffffffffffffffffffff841661127d576040517f68d8c6d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611289848484846119fa565b50979650505050505050565b61129d611539565b60005473ffffffffffffffffffffffffffffffffffffffff82811662010000909204161461133857600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff841690810291909117825560405190917fe253457d9ad994ca9682fc3bbc38c890dca73a2d5ecee3809e548bac8b00d7c691a25b50565b6000610c6882611578565b600061135182611378565b5091949350505050565b600061137061136a8585611463565b83611132565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260408120549063ffffffff60a083901c169060ff60c084901c81169160c885901c82169160d086901c16908290036113fd576040517f68d8c6d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561144857604051602887901b7f5245534552564500000000000000000000000000000000000000000000000000178152601b902061143c906111d8565b50929750909550935091505b509193509193565b600061145c83836116f2565b9392505050565b600080600080600061147486611378565b935093509350935060008061148b868686866119fa565b90925090508061116a838b612282565b60006114e0826114ab57836111d8565b604051602885901b7f5245534552564500000000000000000000000000000000000000000000000000178152601b90206111d8565b50929695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116611338576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61154233611c5b565b611100576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82163b6115e5576040517fdf4c572d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561166a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611667918101906122d4565b60015b6116a0576040517f528ca31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff811615806116b3575060128160ff16115b156116ea576040517f528ca31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b90505b919050565b600073ffffffffffffffffffffffffffffffffffffffff83163b61175a576040517fdf4c572d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016115dc565b8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117df575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526117dc918101906122d4565b60015b611815576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060ff16600814611852576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff1663d62ada116040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118d8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526118d5918101906122f1565b60015b156118e05790505b8273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015611965575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261196291810190612328565b60015b61199b576040517f67a7cd4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85156119e45763ffffffff8716156119df576040517f47fbaa9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119ef565b6119ef848389611d11565b505050505092915050565b6000806000808773ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6f9190612328565b5093505092505085611a8657611a86828289611d11565b509660ff909316600a0a9550919350505050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314801590611ace5750611acc33611c5b565b155b15611100576040517f0129bb9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b0e33611d91565b611100576040517f16e29ab700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b4c611e0a565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b611bca33611e76565b611100576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c08611eef565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b973390565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6891906122f1565b60008313611d4b576040517f53b798e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d558282611f5c565b15611d8c576040517f16dd0ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6040517fd4eb5db000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4eb5db090602401611cd0565b60005460ff16611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016115dc565b6040517f3a41ec6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a41ec6490602401611cd0565b60005460ff1615611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016115dc565b6000611f6e63ffffffff831684612378565b4210159392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146116ed57600080fd5b803563ffffffff811681146116ed57600080fd5b600080600060608486031215611fc557600080fd5b611fce84611f78565b9250611fdc60208501611f78565b9150611fea60408501611f9c565b90509250925092565b60006020828403121561200557600080fd5b61145c82611f78565b801515811461133857600080fd5b80356116ed8161200e565b60ff8116811461133857600080fd5b80356116ed81612027565b6000806000806080858703121561205757600080fd5b61206085611f78565b935061206e60208601611f9c565b9250604085013561207e8161200e565b9150606085013561208e81612027565b939692955090935050565b600080604083850312156120ac57600080fd5b6120b583611f78565b915060208301356120c58161200e565b809150509250929050565b60008082840360c08112156120e457600080fd5b6120ed84611f78565b925060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561211f57600080fd5b5060405160a0810181811067ffffffffffffffff8211171561216a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261217960208501611f78565b815261218760408501611f9c565b60208201526121986060850161201c565b60408201526121a960808501612036565b60608201526121ba60a0850161201c565b6080820152809150509250929050565b600080604083850312156121dd57600080fd5b823591506121ed60208401611f78565b90509250929050565b60008060006060848603121561220b57600080fd5b8335925061221b60208501611f78565b9150611fea60408501611f78565b6000806040838503121561223c57600080fd5b61224583611f78565b91506121ed60208401611f9c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610c6857610c68612253565b6000826122cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156122e657600080fd5b815161145c81612027565b60006020828403121561230357600080fd5b815161145c8161200e565b805169ffffffffffffffffffff811681146116ed57600080fd5b600080600080600060a0868803121561234057600080fd5b6123498661230e565b945060208601519350604086015192506060860151915061236c6080870161230e565b90509295509295909350565b80820180821115610c6857610c6861225356fea2646970667358221220f3a03fe48b432a31225226d9deafc72c94562012660c87a8f0d285dce59576fd64736f6c63430008110033";

type PriceOracleV3HarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleV3HarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracleV3Harness__factory extends ContractFactory {
  constructor(...args: PriceOracleV3HarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PriceOracleV3Harness";
  }

  override deploy(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PriceOracleV3Harness> {
    return super.deploy(
      addressProvider,
      overrides || {}
    ) as Promise<PriceOracleV3Harness>;
  }
  override getDeployTransaction(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addressProvider, overrides || {});
  }
  override attach(address: string): PriceOracleV3Harness {
    return super.attach(address) as PriceOracleV3Harness;
  }
  override connect(signer: Signer): PriceOracleV3Harness__factory {
    return super.connect(signer) as PriceOracleV3Harness__factory;
  }
  static readonly contractName: "PriceOracleV3Harness";

  public readonly contractName: "PriceOracleV3Harness";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleV3HarnessInterface {
    return new utils.Interface(_abi) as PriceOracleV3HarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleV3Harness {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PriceOracleV3Harness;
  }
}

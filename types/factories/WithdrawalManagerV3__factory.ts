/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  WithdrawalManagerV3,
  WithdrawalManagerV3Interface,
} from "../WithdrawalManagerV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "_delay",
        type: "uint40",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountCantBeZeroException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotCreditManagerException",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFreeWithdrawalSlotsException",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaimException",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiveIsNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisteredCreditManagerOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "AddCreditManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddImmediateWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "maturity",
        type: "uint40",
      },
    ],
    name: "AddScheduledWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CancelScheduledWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimImmediateWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimScheduledWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint40",
        name: "newDelay",
        type: "uint40",
      },
    ],
    name: "SetWithdrawalDelay",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCreditManager",
        type: "address",
      },
    ],
    name: "addCreditManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addImmediateWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "addScheduledWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isForceCancel",
        type: "bool",
      },
    ],
    name: "cancellableScheduledWithdrawals",
    outputs: [
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount2",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claimImmediateWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "enum ClaimAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "claimScheduledWithdrawals",
    outputs: [
      {
        internalType: "bool",
        name: "hasScheduled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tokensToEnable",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractsRegister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManagers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "immediateWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "scheduledWithdrawals",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "tokenIndex",
            type: "uint8",
          },
          {
            internalType: "uint40",
            name: "maturity",
            type: "uint40",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ScheduledWithdrawal[2]",
        name: "",
        type: "tuple[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint40",
        name: "newDelay",
        type: "uint40",
      },
    ],
    name: "setWithdrawalDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001fd938038062001fd983398101604081905262000034916200029f565b818080620000428162000257565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801562000094573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ba9190620002e4565b6001600160a01b031660805250819050620000d58162000257565b604051632bdad0e360e11b81527121a7a72a2920a1aa29afa922a3a4a9aa22a960711b6004820152600160248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801562000136573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015c9190620002e4565b6001600160a01b0390811660a052604051632bdad0e360e11b8152692ba2aa242faa27a5a2a760b11b60048201526000602482015290851692506357b5a1c69150604401602060405180830381865afa158015620001be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e49190620002e4565b6001600160a01b031660c05264ffffffffff81161562000216576001805464ffffffffff191664ffffffffff83161790555b60405164ffffffffff821681527e14b51b1cba634dfc17176c79c20d155ee101c001bde7f2328931a8c29f846e9060200160405180910390a1505062000309565b6001600160a01b0381166200027f57604051635919af9760e11b815260040160405180910390fd5b50565b80516001600160a01b03811681146200029a57600080fd5b919050565b60008060408385031215620002b357600080fd5b620002be8362000282565b9150602083015164ffffffffff81168114620002d957600080fd5b809150509250929050565b600060208284031215620002f757600080fd5b620003028262000282565b9392505050565b60805160a05160c051611c766200036360003960008181610109015281816102060152818161098c0152818161127501526112f70152600081816102d701526114590152600081816104040152610fda0152611c766000f3fe6080604052600436106100ec5760003560e01c80637a0c7b211161008a578063c7f9894411610059578063c7f989441461039b578063dac54431146103d0578063de287359146103f2578063e26b2f631461042657600080fd5b80637a0c7b21146102c5578063896f22b8146102f9578063ae40954414610319578063bbff25c71461037b57600080fd5b80633fc8cef3116100c65780633fc8cef3146101f457806354fd4d501461024d5780636261fadf146102715780636a42b8f81461029157600080fd5b80631ac70797146101675780632d2ccecc1461019d5780632df3d68d146101bd57600080fd5b36610162573373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610160576040517fefd5a10e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b34801561017357600080fd5b506101876101823660046118ca565b610446565b60405161019491906118e5565b60405180910390f35b3480156101a957600080fd5b506101606101b836600461195a565b610505565b3480156101c957600080fd5b506101dd6101d8366004611981565b61058a565b604080519215158352602083019190915201610194565b34801561020057600080fd5b506102287f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610194565b34801561025957600080fd5b5061026361012c81565b604051908152602001610194565b34801561027d57600080fd5b5061016061028c3660046119cc565b610663565b34801561029d57600080fd5b506001546102af9064ffffffffff1681565b60405164ffffffffff9091168152602001610194565b3480156102d157600080fd5b506102287f000000000000000000000000000000000000000000000000000000000000000081565b34801561030557600080fd5b50610160610314366004611a21565b610875565b34801561032557600080fd5b50610339610334366004611a6b565b61088d565b604051610194949392919073ffffffffffffffffffffffffffffffffffffffff9485168152602081019390935292166040820152606081019190915260800190565b34801561038757600080fd5b50610160610396366004611aa2565b610945565b3480156103a757600080fd5b506102636103b6366004611aa2565b600060208181529281526040808220909352908152205481565b3480156103dc57600080fd5b506103e56109df565b6040516101949190611ad5565b3480156103fe57600080fd5b506102287f000000000000000000000000000000000000000000000000000000000000000081565b34801561043257600080fd5b506101606104413660046118ca565b6109f0565b61044e61183d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020819052604080832081518083019092529092909190835b828210156104fa5760408051608081018252600284028601805460ff81168352610100810464ffffffffff16602080850191909152660100000000000090910473ffffffffffffffffffffffffffffffffffffffff169383019390935260019081015460608301529083529092019101610485565b505050509050919050565b61050d610a63565b60015464ffffffffff82811691161461058757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000001664ffffffffff83169081179091556040519081527e14b51b1cba634dfc17176c79c20d155ee101c001bde7f2328931a8c29f846e9060200160405180910390a15b50565b600080610595610aa4565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602052604081209080806105c984888b8b610ae5565b91945092509050600080806105e3600288018b8e8e610ae5565b9194509250905060008a60038111156105fe576105fe611b5e565b1480156106115750848061060f5750815b155b15610648576040517f45326b6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85806106515750825b9c93179a509198505050505050505050565b61066b610aa4565b600182116106a5576040517f872160bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260026020526040812090806106d583610b6f565b9150915081610710576040517fdb5bd7cf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546000906107279064ffffffffff1642611bbc565b905060405180608001604052808660ff1681526020018264ffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815250848360ff166002811061077f5761077f611b2f565b825160029190910291909101805460208085015160408087015160ff9096167fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169390931761010064ffffffffff92831602177fffffffffffff0000000000000000000000000000000000000000ffffffffffff16660100000000000073ffffffffffffffffffffffffffffffffffffffff9687160217845560609095015160019093019290925580518a81529385169184019190915289821692918b16917fe5724e0874afe14aa2162f58e85fd03edf3c12194cafb2e6321f5c7302087245910160405180910390a35050505050505050565b61087d610aa4565b610888828483610bbb565b505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040812081908190819081866108c55760016108c8565b60035b90506108fa8260005b6002020154610100900464ffffffffff168260038111156108f4576108f4611b5e565b90610c79565b156109175761090f8260005b60020201610d03565b919750909550505b6109228260016108d1565b1561093a57610932826001610906565b919550909350505b505092959194509250565b8061094f81610d75565b6108883373ffffffffffffffffffffffffffffffffffffffff851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461098a57846109ac565b7f00000000000000000000000000000000000000000000000000000000000000005b8473ffffffffffffffffffffffffffffffffffffffff871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610dc2565b60606109eb6003610eee565b905090565b6109f8610a63565b80610a0281610f02565b610a0d600383610f41565b610a5f57610a1c600383610f70565b5060405173ffffffffffffffffffffffffffffffffffffffff8316907fbca7ba46bb626fab79d5a673d0d8293df21968a25350c4d71433f98600618f5f90600090a25b5050565b610a6c33610f92565b610aa2576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610aaf600333610f41565b610aa2576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8354600161010090910464ffffffffff16908111906000908190610b1b81886003811115610b1557610b15611b5e565b90611048565b15610b3857610b2b8887876110b3565b6000935060019250610b64565b610b4e818860038111156108f4576108f4611b5e565b15610b6457610b5d888761118f565b9150600093505b509450945094915050565b600080600183826002020154610100900464ffffffffff1611610b955760019150915091565b600183816002020154610100900464ffffffffff1611610bb6575060019050805b915091565b60018111156108885773ffffffffffffffffffffffffffffffffffffffff80841660009081526020818152604080832093861683529290529081208054839290610c06908490611be1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f62056c3d138212d00796fef30f457bff626a31b438378ba0a5b674732158200683604051610c6c91815260200190565b60405180910390a3505050565b600060018264ffffffffff1611610c9257506000610cfd565b6003836003811115610ca657610ca6611b5e565b03610cb357506001610cfd565b6002836003811115610cc757610cc7611b5e565b1480610ce457506000836003811115610ce257610ce2611b5e565b145b15610cf157506000610cfd565b5064ffffffffff811642105b92915050565b600080600080846001015490506001811115610d6d57845473ffffffffffffffffffffffffffffffffffffffff66010000000000008204169450600160ff9091161b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810191505b509193909250565b73ffffffffffffffffffffffffffffffffffffffff8116610587576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081815260408083209387168352929052205460018111610e2d576040517f45326b6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808616600090815260208181526040808320938816835292905220600190557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610e8f8484838561126b565b6040805173ffffffffffffffffffffffffffffffffffffffff85811682526020820184905280871692908816917f91a3f5873abd4c3ec04891aba733c1bf3e830b766c12f7badf6554de8132348a910160405180910390a35050505050565b60606000610efb836113b5565b9392505050565b610f0b81611411565b610587576040517fbc6a488a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120541515610efb565b6000610efb8373ffffffffffffffffffffffffffffffffffffffff841661148a565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015611024573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd9190611bf4565b600060018264ffffffffff161161106157506000610cfd565b600383600381111561107557611075611b5e565b0361108257506000610cfd565b600283600381111561109657611096611b5e565b036110a357506001610cfd565b5064ffffffffff16421015919050565b6000806110bf85610d03565b92505091506110fa8580547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ff16610100178155600190810155565b6040805173ffffffffffffffffffffffffffffffffffffffff85811682526020820184905280851692908716917fcce8bd770f6d30d635d2239b1322c388feeaa5bbfa1ebf0ffcb5ad47e78f3a55910160405180910390a3600061117573ffffffffffffffffffffffffffffffffffffffff841685846114d9565b90508061118757611187848484610bbb565b505050505050565b60008060008061119e86610d03565b9250925092506111da8680547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ff16610100178155600190810155565b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ff347c542702d37edcee9abf2652cb67264bb09707a9b1a37c211e058a117307c8360405161123991815260200190565b60405180910390a361126273ffffffffffffffffffffffffffffffffffffffff8416868361158e565b50949350505050565b8080156112c357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b1561138e576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b506113899250505073ffffffffffffffffffffffffffffffffffffffff8416836115f0565b6113af565b6113af73ffffffffffffffffffffffffffffffffffffffff8516848461158e565b50505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561140557602002820191906000526020600020905b8154815260200190600101908083116113f1575b50505050509050919050565b6040517f6fbc6f6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636fbc6f6b90602401611007565b60008181526001830160205260408120546114d157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610cfd565b506000610cfd565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052600090611586908590606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261174f565b949350505050565b6115ba837fa9059cbb0000000000000000000000000000000000000000000000000000000084846117ee565b610888576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8047101561165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146116b9576040519150601f19603f3d011682016040523d82523d6000602084013e6116be565b606091505b5050905080610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401611656565b60008060008473ffffffffffffffffffffffffffffffffffffffff16846040516117799190611c11565b6000604051808303816000865af19150503d80600081146117b6576040519150601f19603f3d011682016040523d82523d6000602084013e6117bb565b606091505b50915091508180156117e55750805115806117e55750808060200190518101906117e59190611bf4565b95945050505050565b60006040518481528360048201528260248201526020600060448360008a5af19150508015611586573d801561183057600160005114601f3d11169150611262565b50505050903b1515919050565b60405180604001604052806002905b6040805160808101825260008082526020808301829052928201819052606082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161184c5790505090565b803573ffffffffffffffffffffffffffffffffffffffff811681146118c557600080fd5b919050565b6000602082840312156118dc57600080fd5b610efb826118a1565b6101008101818360005b6002811015611951578151805160ff16845260208082015164ffffffffff168186015260408083015173ffffffffffffffffffffffffffffffffffffffff169086015260609182015191850191909152608090930192909101906001016118ef565b50505092915050565b60006020828403121561196c57600080fd5b813564ffffffffff81168114610efb57600080fd5b60008060006060848603121561199657600080fd5b61199f846118a1565b92506119ad602085016118a1565b91506040840135600481106119c157600080fd5b809150509250925092565b600080600080608085870312156119e257600080fd5b6119eb856118a1565b93506119f9602086016118a1565b925060408501359150606085013560ff81168114611a1657600080fd5b939692955090935050565b600080600060608486031215611a3657600080fd5b611a3f846118a1565b9250611a4d602085016118a1565b9150604084013590509250925092565b801515811461058757600080fd5b60008060408385031215611a7e57600080fd5b611a87836118a1565b91506020830135611a9781611a5d565b809150509250929050565b60008060408385031215611ab557600080fd5b611abe836118a1565b9150611acc602084016118a1565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611b2357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611af1565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b64ffffffffff818116838216019080821115611bda57611bda611b8d565b5092915050565b80820180821115610cfd57610cfd611b8d565b600060208284031215611c0657600080fd5b8151610efb81611a5d565b6000825160005b81811015611c325760208186018101518583015201611c18565b50600092019182525091905056fea2646970667358221220e2afd91bec4f9877ceea7e2c3208bb2140e3c447a3b9027caf785471c5bfbdb264736f6c63430008110033";

type WithdrawalManagerV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalManagerV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawalManagerV3__factory extends ContractFactory {
  constructor(...args: WithdrawalManagerV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WithdrawalManagerV3";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    _delay: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalManagerV3> {
    return super.deploy(
      _addressProvider,
      _delay,
      overrides || {}
    ) as Promise<WithdrawalManagerV3>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    _delay: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressProvider,
      _delay,
      overrides || {}
    );
  }
  override attach(address: string): WithdrawalManagerV3 {
    return super.attach(address) as WithdrawalManagerV3;
  }
  override connect(signer: Signer): WithdrawalManagerV3__factory {
    return super.connect(signer) as WithdrawalManagerV3__factory;
  }
  static readonly contractName: "WithdrawalManagerV3";

  public readonly contractName: "WithdrawalManagerV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalManagerV3Interface {
    return new utils.Interface(_abi) as WithdrawalManagerV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalManagerV3 {
    return new Contract(address, _abi, signerOrProvider) as WithdrawalManagerV3;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PoolMock, PoolMockInterface } from "../PoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "referralCode",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "BorrowForbidden",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "NewCreditManagerConnected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "NewExpectedLiquidityLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newInterestRateModel",
        type: "address",
      },
    ],
    name: "NewInterestRateModel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "NewWithdrawFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
    ],
    name: "UncoveredLoss",
    type: "event",
  },
  {
    inputs: [],
    name: "_cumulativeIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_expectedLiquidityLU",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_timestampLU",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "referralCode",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract AddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "availableLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowAPY_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcLinearCumulative_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcLinearIndex_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
    ],
    name: "connectCreditManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "creditManagers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "creditManagersCanBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "creditManagersCanRepay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManagersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "dieselToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedLiquidityLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
    ],
    name: "forbidCreditManagerToBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fromDiesel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDieselRate_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRateModel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "lendCreditAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_interestRateModel",
        type: "address",
      },
    ],
    name: "newInterestRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolQuotaKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quotaRevenue",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repayAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loss",
        type: "uint256",
      },
    ],
    name: "repayCreditAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repayLoss",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repayProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cumulativeIndex_RAY",
        type: "uint256",
      },
    ],
    name: "setCumulativeIndexNow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "setExpectedLiquidityLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolQuotaKeeper",
        type: "address",
      },
    ],
    name: "setPoolQuotaKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quotaRevenue",
        type: "uint256",
      },
    ],
    name: "setQuotaRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setSupportsQuotas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ver",
        type: "uint256",
      },
    ],
    name: "setVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportsQuotas",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "toDiesel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "updateQuotaRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405261012c6017556018805461ffff60601b1916905534801561002457600080fd5b50604051610d69380380610d69833981016040819052610043916100c9565b600080546001600160a01b038085166001600160a01b0319928316179092556003805492841692821683179055600480549091169091179055610093600a6b033b2e3c9fd0803ce80000006100fc565b60085550506b033b2e3c9fd0803ce800000060165561011e565b80516001600160a01b03811681146100c457600080fd5b919050565b600080604083850312156100dc57600080fd5b6100e5836100ad565b91506100f3602084016100ad565b90509250929050565b60008261011957634e487b7160e01b600052601260045260246000fd5b500490565b610c3c8061012d6000396000f3fe608060405234801561001057600080fd5b506004361061034c5760003560e01c80635c975abb116101bd578063bf28068b116100f9578063d6458eea116100a2578063ef8d96031161007c578063ef8d960314610801578063f11a648714610383578063f3fdb15a1461080a578063fe14112d1461082a57600080fd5b8063d6458eea14610760578063dbcb313b146107ef578063e941fa78146107f857600080fd5b8063cb3905e1116100d3578063cb3905e1146107dd578063cf33d95514610383578063d0efe753146107e657600080fd5b8063bf28068b1461078e578063c5f956af146107a1578063ca9505e4146107c157600080fd5b80639aa5d46211610166578063b3554a0a11610140578063b3554a0a14610757578063b6ac642a14610760578063bb04b19314610760578063be8da14b1461076e57600080fd5b80639aa5d4621461071f5780639fd8a10c14610732578063a4e8273e1461075057600080fd5b8063743753591161019757806374375359146106c9578063788c6bfe146106d15780638456cb59146106e357600080fd5b80635c975abb1461069a578063609ae317146106b757806367c99d58146106c057600080fd5b806336dda7d51161028c5780634c19386c11610235578063532fe5021161020f578063532fe502146106405780635427c9381461064957806354fd4d501461065c5780635a6952e41461066557600080fd5b80634c19386c146105d35780634d778ad1146105dc5780634fc40377146105ef57600080fd5b80633f4ba83a116102665780633f4ba83a1461058a578063408def1e146105b757806345d31f9d146105ca57600080fd5b806336dda7d51461052757806338d52e0f146105475780633e163df01461056757600080fd5b80631e16e4fc116102f95780632954018c116102d35780632954018c146104ab57806329f3d3b6146104cb5780632a3354c9146104d45780632e97ca21146104f457600080fd5b80631e16e4fc146104065780632495a5991461043e578063275df3ad1461045e57600080fd5b80630d7ca3561161032a5780630d7ca356146103965780630fce70fb146103a95780631ab7c7d7146103b157600080fd5b8063030dbb041461035157806305fe138b1461036d578063078c478114610383575b600080fd5b61035a60115481565b6040519081526020015b60405180910390f35b61035a61037b366004610a8a565b600092915050565b610394610391366004610ab6565b50565b005b6103946103a4366004610ad8565b601655565b60165461035a565b6103946103bf366004610ab6565b601980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610419610414366004610ad8565b610831565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610364565b6003546104199073ffffffffffffffffffffffffffffffffffffffff1681565b61039461046c366004610ad8565b601880547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff92909216919091179055565b6000546104199073ffffffffffffffffffffffffffffffffffffffff1681565b61035a600a5481565b600b546104199073ffffffffffffffffffffffffffffffffffffffff1681565b610517610502366004610ab6565b60076020526000908152604090205460ff1681565b6040519015158152602001610364565b6006546104199073ffffffffffffffffffffffffffffffffffffffff1681565b6004546104199073ffffffffffffffffffffffffffffffffffffffff1681565b610517610575366004610ab6565b60156020526000908152604090205460ff1681565b610394601880547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff169055565b6103946105c5366004610ad8565b601755565b61035a60085481565b61035a60015481565b61035a6105ea366004610ad8565b610868565b6103946105fd366004610af1565b601880549115156d0100000000000000000000000000027fffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff909216919091179055565b61035a60125481565b61035a610657366004610ad8565b61089d565b61035a60175481565b60185461067d906bffffffffffffffffffffffff1681565b6040516bffffffffffffffffffffffff9091168152602001610364565b601854610517906c01000000000000000000000000900460ff1681565b61035a60095481565b61035a600e5481565b61035a6108b6565b6b033b2e3c9fd0803ce800000061035a565b610394601880547fffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffff166c01000000000000000000000000179055565b61039461072d366004610b13565b505050565b601854610517906d0100000000000000000000000000900460ff1681565b600161035a565b61035a600f5481565b610394610391366004610ad8565b6019546104199073ffffffffffffffffffffffffffffffffffffffff1681565b61039461079c366004610a8a565b61094e565b6014546104199073ffffffffffffffffffffffffffffffffffffffff1681565b6103946107cf366004610b48565b600c92909255600d55600e55565b61035a600d5481565b61035a600c5481565b61035a60165481565b61035a60105481565b61035a60025481565b6013546104199073ffffffffffffffffffffffffffffffffffffffff1681565b600061035a565b6005818154811061084157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60006b033b2e3c9fd0803ce800000061088d6b033b2e3c9fd0803ce800000084610b74565b6108979190610bb2565b92915050565b60006b033b2e3c9fd0803ce800000061088d8184610b74565b6003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190610bed565b905090565b600a829055600b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff838116919091179091556003546109a7911682846109ab565b5050565b6109d7837fa9059cbb000000000000000000000000000000000000000000000000000000008484610a0d565b61072d576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518481528360048201528260248201526020600060448360008a5af19150508015610a59573d8015610a4f57600160005114601f3d11169150610a57565b6000863b1191505b505b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a8557600080fd5b919050565b60008060408385031215610a9d57600080fd5b82359150610aad60208401610a61565b90509250929050565b600060208284031215610ac857600080fd5b610ad182610a61565b9392505050565b600060208284031215610aea57600080fd5b5035919050565b600060208284031215610b0357600080fd5b81358015158114610ad157600080fd5b600080600060608486031215610b2857600080fd5b83359250610b3860208501610a61565b9150604084013590509250925092565b600080600060608486031215610b5d57600080fd5b505081359360208301359350604090920135919050565b8082028115828204841417610897577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082610be8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610bff57600080fd5b505191905056fea26469706673582212208f81bcdfa51521a617db8b345abd868eb090b4d7be3d47f4969c7764ebc01c9064736f6c63430008110033";

type PoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolMock__factory extends ContractFactory {
  constructor(...args: PoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PoolMock";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    _underlyingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolMock> {
    return super.deploy(
      _addressProvider,
      _underlyingToken,
      overrides || {}
    ) as Promise<PoolMock>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    _underlyingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressProvider,
      _underlyingToken,
      overrides || {}
    );
  }
  override attach(address: string): PoolMock {
    return super.attach(address) as PoolMock;
  }
  override connect(signer: Signer): PoolMock__factory {
    return super.connect(signer) as PoolMock__factory;
  }
  static readonly contractName: "PoolMock";

  public readonly contractName: "PoolMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolMockInterface {
    return new utils.Interface(_abi) as PoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolMock {
    return new Contract(address, _abi, signerOrProvider) as PoolMock;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountFactoryV3Harness,
  AccountFactoryV3HarnessInterface,
} from "../AccountFactoryV3Harness";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotCreditManagerException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditAccountIsInUseException",
    type: "error",
  },
  {
    inputs: [],
    name: "MasterCreditAccountAlreadyDeployedException",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisteredCreditManagerOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "masterCreditAccount",
        type: "address",
      },
    ],
    name: "AddCreditManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "DeployCreditAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "ReturnCreditAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "TakeCreditAccount",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "addCreditManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractsRegister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "factoryParams",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "masterCreditAccount",
            type: "address",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "tail",
            type: "uint40",
          },
        ],
        internalType: "struct FactoryParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "queuedAccounts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creditAccount",
            type: "address",
          },
          {
            internalType: "uint40",
            name: "reusableAfter",
            type: "uint40",
          },
        ],
        internalType: "struct QueuedAccount",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "rescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "returnCreditAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "masterCreditAccount",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "head",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "tail",
        type: "uint40",
      },
    ],
    name: "setFactoryParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "reusableAfter",
        type: "uint40",
      },
    ],
    name: "setQueuedAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "takeCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001d6938038062001d6983398101604081905262000034916200019f565b80808080620000438162000174565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801562000095573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bb91906200019f565b6001600160a01b031660805250819050620000d68162000174565b604051632bdad0e360e11b81527121a7a72a2920a1aa29afa922a3a4a9aa22a960711b6004820152600160248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801562000137573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015d91906200019f565b6001600160a01b031660a05250620001d192505050565b6001600160a01b0381166200019c57604051635919af9760e11b815260040160405180910390fd5b50565b600060208284031215620001b257600080fd5b81516001600160a01b0381168114620001ca57600080fd5b9392505050565b60805160a051611b6462000205600039600081816101670152610fa90152600081816102a10152610eed0152611b646000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063c8cd77c611610081578063e26b2f631161005b578063e26b2f63146102c3578063ed9e26e7146102d6578063f5ee2c1c1461032157600080fd5b8063c8cd77c61461019c578063ccca2cf7146101af578063de2873591461029c57600080fd5b80636a42b8f8116100b25780636a42b8f8146101425780637a0c7b211461016257806389b77b3e1461018957600080fd5b806321d18456146100d95780633c4927ec1461011657806354fd4d501461012b575b600080fd5b6100ec6100e7366004610fe7565b610417565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61012961012436600461102d565b610688565b005b61013461012c81565b60405190815260200161010d565b61014c6203f48081565b60405164ffffffffff909116815260200161010d565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6101296101973660046110bb565b610898565b6101296101aa3660046110f2565b610a71565b6102556101bd3660046110bb565b60408051606080820183526000808352602080840182905292840181905273ffffffffffffffffffffffffffffffffffffffff94851681528083528390208351918201845254938416815264ffffffffff740100000000000000000000000000000000000000008504811692820192909252790100000000000000000000000000000000000000000000000000909304169082015290565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260208084015164ffffffffff90811691830191909152928201519092169082015260600161010d565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6101296102d13660046110bb565b610b6d565b6102e96102e436600461113f565b610cb7565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015164ffffffffff16928101929092520161010d565b61012961032f366004611169565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815264ffffffffff938416602080830191825293851682840190815296861660009081529384905291909220915182549151955194167fffffffffffffff00000000000000000000000000000000000000000000000000909116177401000000000000000000000000000000000000000094831694909402939093177fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff167901000000000000000000000000000000000000000000000000009290911691909102179055565b336000908152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff1680610475576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815464ffffffffff74010000000000000000000000000000000000000000820481169179010000000000000000000000000000000000000000000000000090041681148061050657503360009081526001602052604090208164010000000081106104e2576104e26111a4565b015474010000000000000000000000000000000000000000900464ffffffffff1642105b1561055f5761051482610d56565b604051909450339073ffffffffffffffffffffffffffffffffffffffff8616907fe1b644b6334c18193b2f9111182fd3cf0af58bf954cd9949a56ef6a486a120e190600090a361063c565b336000908152600160205260409020816401000000008110610583576105836111a4565b015433600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff90911694508164010000000081106105c3576105c36111a4565b0180547fffffffffffffff0000000000000000000000000000000000000000000000000016905582547401000000000000000000000000000000000000000080820464ffffffffff90811660010116027fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff919091161783555b604051339073ffffffffffffffffffffffffffffffffffffffff8616907f98b5155c93d7cea03235a2f37b8da764be2e15649b032ccb5cbbfe61cd71629990600090a350505092915050565b610690610e22565b60008473ffffffffffffffffffffffffffffffffffffffff1663c12c21c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d60208110156106f357600080fd5b5051905061070081610e63565b60008173ffffffffffffffffffffffffffffffffffffffff16633c5bc3b2876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505061010060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d61010081101561078657600080fd5b5060e00151905073ffffffffffffffffffffffffffffffffffffffff8116156107db576040517f3b941fe400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663c5ecfed78686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b50505050505050505050565b336000908152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff166108f5576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016203f4804261092b91906111d3565b64ffffffffff9081169091523360009081526001602052604090208354909179010000000000000000000000000000000000000000000000000090910416640100000000811061097d5761097d6111a4565b82519101805460209093015173ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffff00000000000000000000000000000000000000000000000000909416939093177401000000000000000000000000000000000000000064ffffffffff9485160217905582547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff81167901000000000000000000000000000000000000000000000000009182900484166001019093160291909117825560405133918416907fe8d6fd8171676387a50d82e1751b2f078b786ff0700ed1877049c66f5b150d8390600090a35050565b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018264ffffffffff16815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846401000000008110610af757610af76111a4565b82519101805460209093015164ffffffffff1674010000000000000000000000000000000000000000027fffffffffffffff0000000000000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff9092169190911791909117905550505050565b610b75610e22565b80610b7f81610e63565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152602081905260409020541615610bde576040517fc8ed8adc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082604051610bed90610fda565b73ffffffffffffffffffffffffffffffffffffffff909116815260405190819003602001906000f080158015610c27573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff8481166000818152602081815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001694861694851790558151938452905193945090927f837f8321879761d39749a08e7aaca7841729ada6ac050818f4c30b6c82560a299281900390910190a2505050565b604080518082019091526000808252602082015273ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020826401000000008110610d0557610d056111a4565b6040805180820190915291015473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000900464ffffffffff1660208201529392505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610e1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b610e2b33610ea5565b610e61576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e6c81610f61565b610ea2576040517fbc6a488a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b919061121f565b92915050565b6040517f6fbc6f6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636fbc6f6b90602401610f1a565b6108ed8061124283390190565b60008060408385031215610ffa57600080fd5b50508035926020909101359150565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e1d57600080fd5b6000806000806060858703121561104357600080fd5b61104c85611009565b935061105a60208601611009565b9250604085013567ffffffffffffffff8082111561107757600080fd5b818701915087601f83011261108b57600080fd5b81358181111561109a57600080fd5b8860208285010111156110ac57600080fd5b95989497505060200194505050565b6000602082840312156110cd57600080fd5b6110d682611009565b9392505050565b803564ffffffffff81168114610e1d57600080fd5b6000806000806080858703121561110857600080fd5b61111185611009565b93506020850135925061112660408601611009565b9150611134606086016110dd565b905092959194509250565b6000806040838503121561115257600080fd5b61115b83611009565b946020939093013593505050565b6000806000806080858703121561117f57600080fd5b61118885611009565b935061119660208601611009565b9250611126604086016110dd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b64ffffffffff818116838216019080821115611218577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b60006020828403121561123157600080fd5b815180151581146110d657600080fdfe60c060405234801561001057600080fd5b506040516108ed3803806108ed8339818101604052602081101561003357600080fd5b50516001600160a01b031660a0523360805260805160a0516108756100786000396000818161019901526104580152600081816101e9015261035e01526108756000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c45a015511610050578063c45a0155146101e4578063c5ecfed71461020b578063d1660f991461029a57600080fd5b80631cff79cd1461007757806354fd4d5014610179578063c12c21c014610194575b600080fd5b6101046004803603604081101561008d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100c557600080fd5b8201836020820111156100d757600080fd5b803590602001918460018302840111640100000000831117156100f957600080fd5b5090925090506102dd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013e578181015183820152602001610126565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018261012c81565b60408051918252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6102986004803603604081101561022157600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561025957600080fd5b82018360208201111561026b57600080fd5b8035906020019184600183028401116401000000008311171561028d57600080fd5b509092509050610346565b005b610298600480360360608110156102b057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610412565b60606102e7610440565b61033e83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8816929150506104b1565b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146103b5576040517f8b63087400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040c82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8716929150506104b1565b50505050565b61041a610440565b61043b73ffffffffffffffffffffffffffffffffffffffff841683836104fc565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146104af576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60606104f5838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061055e565b9392505050565b610528837fa9059cbb00000000000000000000000000000000000000000000000000000000848461067c565b61043b576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060824710156105f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161061e91906107d2565b60006040518083038185875af1925050503d806000811461065b576040519150601f19603f3d011682016040523d82523d6000602084013e610660565b606091505b5091509150610671878383876106cf565b979650505050505050565b60006040518481528360048201528260248201526020600060448360008a5af1915050801561033e573d80156106be57600160005114601f3d111691506106c6565b6000863b1191505b50949350505050565b6060831561076557825160000361075e5773ffffffffffffffffffffffffffffffffffffffff85163b61075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ec565b508161033e565b61033e838381511561077a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec91906107ee565b60005b838110156107c95781810151838201526020016107b1565b50506000910152565b600082516107e48184602087016107ae565b9190910192915050565b602081526000825180602084015261080d8160408501602087016107ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220e0e6fc027adf682d09ce17c81346b2bd9be5036d1c4e329828bf26f2c0dadb3164736f6c63430008110033a26469706673582212209a7f48a2f462951d3dfb4ce7d7f10610d1cb04822b1d9454c126954feef290bb64736f6c63430008110033";

type AccountFactoryV3HarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountFactoryV3HarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountFactoryV3Harness__factory extends ContractFactory {
  constructor(...args: AccountFactoryV3HarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AccountFactoryV3Harness";
  }

  override deploy(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountFactoryV3Harness> {
    return super.deploy(
      addressProvider,
      overrides || {}
    ) as Promise<AccountFactoryV3Harness>;
  }
  override getDeployTransaction(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addressProvider, overrides || {});
  }
  override attach(address: string): AccountFactoryV3Harness {
    return super.attach(address) as AccountFactoryV3Harness;
  }
  override connect(signer: Signer): AccountFactoryV3Harness__factory {
    return super.connect(signer) as AccountFactoryV3Harness__factory;
  }
  static readonly contractName: "AccountFactoryV3Harness";

  public readonly contractName: "AccountFactoryV3Harness";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFactoryV3HarnessInterface {
    return new utils.Interface(_abi) as AccountFactoryV3HarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountFactoryV3Harness {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountFactoryV3Harness;
  }
}

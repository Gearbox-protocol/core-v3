/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GearStakingV3, GearStakingV3Interface } from "../GearStakingV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_firstEpochTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotMigratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingContractNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimGearWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositGear",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "successor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MigrateGear",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ScheduleGearWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "migrator",
        type: "address",
      },
    ],
    name: "SetMigrator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "successor",
        type: "address",
      },
    ],
    name: "SetSuccessor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "votingContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum VotingContractStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "SetVotingContractStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedVotingContract",
    outputs: [
      {
        internalType: "enum VotingContractStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "availableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claimWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votes",
        type: "tuple[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votes",
        type: "tuple[]",
      },
    ],
    name: "depositOnMigration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "firstEpochTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gear",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getWithdrawableAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawableNow",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "withdrawableInEpochs",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votesBefore",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votesAfter",
        type: "tuple[]",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votes",
        type: "tuple[]",
      },
    ],
    name: "multivote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMigrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSuccessor",
        type: "address",
      },
    ],
    name: "setSuccessor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "votingContract",
        type: "address",
      },
      {
        internalType: "enum VotingContractStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "setVotingContractStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "successor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "amount",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "votingContract",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "voteAmount",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isIncrease",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct MultiVote[]",
        name: "votes",
        type: "tuple[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526000805461ff0019166101001790553480156200002057600080fd5b506040516200296b3803806200296b833981016040819052620000439162000242565b8180806200005181620001fa565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa158015620000a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c9919062000271565b6001600160a01b031660808190526000805460ff1916905560408051638da5cb5b60e01b81529051919350638da5cb5b92506004808201926020929091908290030181865afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000147919062000271565b6000805462010000600160b01b031916620100006001600160a01b0393841602178155604051632bdad0e360e11b81526923a2a0a92faa27a5a2a760b11b6004820152602481019190915290841691506357b5a1c690604401602060405180830381865afa158015620001be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e4919062000271565b6001600160a01b031660a05260c0525062000296565b6001600160a01b0381166200022257604051635919af9760e11b815260040160405180910390fd5b50565b80516001600160a01b03811681146200023d57600080fd5b919050565b600080604083850312156200025657600080fd5b620002618362000225565b9150602083015190509250929050565b6000602082840312156200028457600080fd5b6200028f8262000225565b9392505050565b60805160a05160c05161266d620002fe600039600081816103c001528181610c360152610c6b0152600081816103320152818161069e015281816113c1015261183701526000818161044501528181611a1d01528181611b6e0152611c53015261266d6000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638456cb59116100ee578063a7dc1a3911610097578063ddca6ac111610071578063ddca6ac11461042d578063de28735914610440578063f71b761814610467578063f77c47911461048857600080fd5b8063a7dc1a39146103bb578063b6f15164146103e2578063b97dd9e21461041257600080fd5b80639f2fd759116100c85780639f2fd7591461032d578063a0821be314610354578063a63cdc10146103a857600080fd5b80638456cb59146102ff57806392eefe9b14610307578063930d3f171461031a57600080fd5b806354fd4d501161015057806370a082311161012a57806370a08231146102885780637cd07e47146102cc5780637cdef3ed146102ec57600080fd5b806354fd4d50146102115780635c975abb1461022d5780636ff968c31461024357600080fd5b806323cf31181161018157806323cf3118146101e35780632ac52d08146101f65780633f4ba83a1461020957600080fd5b806310e5bff8146101a857806313a3ac14146101bd57806319e4fec0146101d0575b600080fd5b6101bb6101b6366004611f55565b6104ae565b005b6101bb6101cb366004611fdf565b610548565b6101bb6101de366004612060565b610813565b6101bb6101f1366004611f55565b61084a565b6101bb6102043660046120b3565b6108e3565b6101bb61096c565b61021a61012c81565b6040519081526020015b60405180910390f35b60005460ff166040519015158152602001610224565b6004546102639073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610224565b61021a610296366004611f55565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020546bffffffffffffffffffffffff1690565b6005546102639073ffffffffffffffffffffffffffffffffffffffff1681565b6101bb6102fa366004612114565b61097e565b6101bb6109b3565b6101bb610315366004611f55565b6109c3565b6101bb610328366004611f55565b610a68565b6102637f000000000000000000000000000000000000000000000000000000000000000081565b61021a610362366004611f55565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020546c0100000000000000000000000090046bffffffffffffffffffffffff1690565b6101bb6103b63660046120b3565b610a9b565b61021a7f000000000000000000000000000000000000000000000000000000000000000081565b6104056103f0366004611f55565b60036020526000908152604090205460ff1681565b6040516102249190612185565b61041a610c32565b60405161ffff9091168152602001610224565b6101bb61043b3660046121c6565b610c91565b6102637f000000000000000000000000000000000000000000000000000000000000000081565b61047a610475366004611f55565b610da2565b604051610224929190612201565b6000546102639062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b6104b6610eda565b60045473ffffffffffffffffffffffffffffffffffffffff82811691161461054557600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa56ff9c39ac5d0a5c2dbfed327d937e200b36d61611aa13262558a55996400fa90600090a25b50565b610550610f19565b6000805461ff00191661020017905560045473ffffffffffffffffffffffffffffffffffffffff1661058181610fb2565b61058c338686610fff565b336000908152600160205260409020805487908290600c906105cd9084906c0100000000000000000000000090046bffffffffffffffffffffffff16612268565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550868160000160008282829054906101000a90046bffffffffffffffffffffffff166106269190612268565b82546101009290920a6bffffffffffffffffffffffff818102199093169183160217909155600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821692810192909252918a1660248201527f0000000000000000000000000000000000000000000000000000000000000000909116915063095ea7b3906044016020604051808303816000875af11580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906122a2565b50600480546040517f2ac52d0800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691632ac52d089161076a918b9133918a918a9101612308565b600060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b50506004546040516bffffffffffffffffffffffff8b16815273ffffffffffffffffffffffffffffffffffffffff90911692503391507fc66e6a1fd246d4cff7d2c8af946f30366e988cdf26cfd820fef66e5ebd2f7a589060200160405180910390a350506000805461ff0019166101001790555050505050565b61081b610f19565b6000805461ff001916610200179055610836833384846113a7565b50506000805461ff00191661010017905550565b610852610eda565b60055473ffffffffffffffffffffffffffffffffffffffff82811691161461054557600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517ff40543f3e605deae7fbca26db18ff1de07eda2925d68655836eae4c167444e3290600090a250565b6108eb610f19565b6000805461ff00191661020017905560055473ffffffffffffffffffffffffffffffffffffffff16331461094b576040517fa8c3fab400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610957848484846113a7565b50506000805461ff0019166101001790555050565b610974611539565b61097c611578565b565b610986610f19565b6000805461ff0019166102001790556109a0338383610fff565b50506000805461ff001916610100179055565b6109bb6115f5565b61097c611634565b6109cb610eda565b60005473ffffffffffffffffffffffffffffffffffffffff82811662010000909204161461054557600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff841690810291909117825560405190917fe253457d9ad994ca9682fc3bbc38c890dca73a2d5ecee3809e548bac8b00d7c691a250565b610a70610f19565b6000805461ff001916610200179055610a89338261168f565b506000805461ff001916610100179055565b610aa3610f19565b6000805461ff001916610200179055610abd338383610fff565b610ac7338461168f565b3360009081526001602052604090208054859190600c90610b079084906c0100000000000000000000000090046bffffffffffffffffffffffff16612268565b82546bffffffffffffffffffffffff9182166101009390930a9283029190920219909116179055503360009081526002602052604090208490610b4c6001600461248c565b60048110610b5c57610b5c61249f565b60029182820401919006600c028282829054906101000a90046bffffffffffffffffffffffff16610b8d91906124ce565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f03873e5a85b5abffbdc3a4b20b8270777ffcad28e27c3639fcebfb6ac30b1b7d85604051610c1591906bffffffffffffffffffffffff91909116815260200190565b60405180910390a250506000805461ff0019166101001790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000421015610c625750600090565b50600162093a807f00000000000000000000000000000000000000000000000000000000000000004203040190565b610c99610eda565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090205460ff166002811115610cd357610cd3612156565b816002811115610ce557610ce5612156565b14610d9e5773ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902080548291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115610d4a57610d4a612156565b02179055508173ffffffffffffffffffffffffffffffffffffffff167f5a9658f26be058d82ced5efee64ec212447b0eafb9d43fd5db3d53197b6f766082604051610d959190612185565b60405180910390a25b5050565b6000610dac611e4e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020819052604082209081015490919061ffff16610de6610c32565b610df091906124f3565b905060005b6004811015610ed2578161ffff16811015610e5357828160048110610e1c57610e1c61249f565b60029182820401919006600c029054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16850194505b60048261ffff16820110610e68576000610ea5565b8261ffff8316820160048110610e8057610e8061249f565b60029182820401919006600c029054906101000a90046bffffffffffffffffffffffff165b6bffffffffffffffffffffffff16848260048110610ec557610ec561249f565b6020020152600101610df5565b505050915091565b610ee3336119d5565b61097c576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe61010090910460ff160161097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610545576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600081900361100f5750505050565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160205260408120905b8281101561139f57368585838181106110515761105161249f565b9050602002810190611063919061250e565b9050611075606082016040830161254c565b1561120a5760016003600061108d6020850185611f55565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1660028111156110c8576110c8612156565b146110ff576040517fb311e03a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61110c6020820182611f55565b73ffffffffffffffffffffffffffffffffffffffff16633c4f98ac886111386040850160208601612569565b6111456060860186612584565b6040518563ffffffff1660e01b815260040161116494939291906125e9565b600060405180830381600087803b15801561117e57600080fd5b505af1158015611192573d6000803e3d6000fd5b506111a7925050506040820160208301612569565b83548490600c906111d79084906c0100000000000000000000000090046bffffffffffffffffffffffff16612268565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611396565b60006003600061121d6020850185611f55565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff16600281111561125857611258612156565b0361128f576040517fb311e03a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61129c6020820182611f55565b73ffffffffffffffffffffffffffffffffffffffff1663102418f3886112c86040850160208601612569565b6112d56060860186612584565b6040518563ffffffff1660e01b81526004016112f494939291906125e9565b600060405180830381600087803b15801561130e57600080fd5b505af1158015611322573d6000803e3d6000fd5b50611337925050506040820160208301612569565b83548490600c906113679084906c0100000000000000000000000090046bffffffffffffffffffffffff166124ce565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b50600101611036565b505050505050565b6113f773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633306bffffffffffffffffffffffff8816611a91565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812080549091869183919061143e9084906bffffffffffffffffffffffff166124ce565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508481600001600c8282829054906101000a90046bffffffffffffffffffffffff1661149791906124ce565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f40c1c5eea44ed2915f467af4c276c820af0ea61e60cec94ae218e26ce88c9d588660405161151f91906bffffffffffffffffffffffff91909116815260200190565b60405180910390a2611532848484610fff565b5050505050565b61154233611b26565b61097c576040517f16e29ab700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611580611b9f565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6115fe33611c0b565b61097c576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163c611c84565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115cb3390565b6000611699610c32565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260026020526040808220815160c081018084529495509293909183919082019083906004908288855b82829054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200190600c0190602082600b010492830192600103820291508084116116de575050509284525050506002919091015461ffff9081166020928301529082015191925090811690831611156119cf57600081602001518361176991906124f3565b90506000805b6004811015611816578261ffff168110156117af57835181600481106117975761179761249f565b60200201516bffffffffffffffffffffffff16820191505b60048361ffff168201106117c45760006117e3565b835161ffff84168201600481106117dd576117dd61249f565b60200201515b845182600481106117f6576117f661249f565b6bffffffffffffffffffffffff909216602092909202015260010161176f565b50801561194a5761185e73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168683611cf1565b61186781611d58565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260016020526040812080549091906118aa9084906bffffffffffffffffffffffff16612268565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508573ffffffffffffffffffffffffffffffffffffffff167f9ea817ed5ccb5a1eafcd6d01a896035676615d5bf2b59a1798801a35e00d4aa1868360405161194192919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60405180910390a25b61ffff841660208085019190915273ffffffffffffffffffffffffffffffffffffffff87166000908152600290915260409020835184919061198f9082906004611e6c565b5060209190910151600290910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90921691909117905550505b50505050565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015611a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8b91906122a2565b92915050565b60006323b872dd60e01b905060006040518281528560048201528460248201528360448201526020600060648360008b5af19150508015611aef573d8015611ae557600160005114601f3d11169150611aed565b6000873b1191505b505b8061139f576040517ff405907100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fd4eb5db000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4eb5db090602401611a4a565b60005460ff1661097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610fa9565b6040517f3a41ec6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a41ec6490602401611a4a565b60005460ff161561097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610fa9565b611d1d837fa9059cbb000000000000000000000000000000000000000000000000000000008484611dfa565b611d53576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60006bffffffffffffffffffffffff821115611df6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152608401610fa9565b5090565b60006040518481528360048201528260248201526020600060448360008a5af19150508015611e46573d8015611e3c57600160005114601f3d11169150611e44565b6000863b1191505b505b949350505050565b60405180608001604052806004906020820280368337509192915050565b600283019183908215611f105791602002820160005b83821115611ed657835183826101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055509260200192600c01602081600b01049283019260010302611e82565b8015611f0e5782816101000a8154906bffffffffffffffffffffffff0219169055600c01602081600b01049283019260010302611ed6565b505b50611df69291505b80821115611df65760008155600101611f18565b803573ffffffffffffffffffffffffffffffffffffffff81168114611f5057600080fd5b919050565b600060208284031215611f6757600080fd5b611f7082611f2c565b9392505050565b80356bffffffffffffffffffffffff81168114611f5057600080fd5b60008083601f840112611fa557600080fd5b50813567ffffffffffffffff811115611fbd57600080fd5b6020830191508360208260051b8501011115611fd857600080fd5b9250929050565b600080600080600060608688031215611ff757600080fd5b61200086611f77565b9450602086013567ffffffffffffffff8082111561201d57600080fd5b61202989838a01611f93565b9096509450604088013591508082111561204257600080fd5b5061204f88828901611f93565b969995985093965092949392505050565b60008060006040848603121561207557600080fd5b61207e84611f77565b9250602084013567ffffffffffffffff81111561209a57600080fd5b6120a686828701611f93565b9497909650939450505050565b600080600080606085870312156120c957600080fd5b6120d285611f77565b93506120e060208601611f2c565b9250604085013567ffffffffffffffff8111156120fc57600080fd5b61210887828801611f93565b95989497509550505050565b6000806020838503121561212757600080fd5b823567ffffffffffffffff81111561213e57600080fd5b61214a85828601611f93565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600383106121c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080604083850312156121d957600080fd5b6121e283611f2c565b91506020830135600381106121f657600080fd5b809150509250929050565b82815260a0810160208083018460005b600481101561222e57815183529183019190830190600101612211565b505050509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6bffffffffffffffffffffffff82811682821603908082111561228d5761228d612239565b5092915050565b801515811461054557600080fd5b6000602082840312156122b457600080fd5b8151611f7081612294565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600060608083016bffffffffffffffffffffffff8089168552602073ffffffffffffffffffffffffffffffffffffffff808a16828801526040858189015284898652608095508589019050858a60051b8a01018b60005b8c811015612478577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808c840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818f36030181126123c057600080fd5b8e01866123cc82611f2c565b168452886123db898301611f77565b1688850152858101356123ed81612294565b151584870152808b0135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261242857600080fd5b01878101903567ffffffffffffffff81111561244357600080fd5b80360382131561245257600080fd5b8a8c8601526124648b860182846122bf565b95890195945050509086019060010161235f565b50909e9d5050505050505050505050505050565b81810381811115611a8b57611a8b612239565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6bffffffffffffffffffffffff81811683821601908082111561228d5761228d612239565b61ffff82811682821603908082111561228d5761228d612239565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261254257600080fd5b9190910192915050565b60006020828403121561255e57600080fd5b8135611f7081612294565b60006020828403121561257b57600080fd5b611f7082611f77565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b957600080fd5b83018035915067ffffffffffffffff8211156125d457600080fd5b602001915036819003821315611fd857600080fd5b73ffffffffffffffffffffffffffffffffffffffff851681526bffffffffffffffffffffffff8416602082015260606040820152600061262d6060830184866122bf565b969550505050505056fea2646970667358221220a6c2f4cb6994e0e16dfd0af176d06a7641a1cb16b537d3fa2819cc25e1c8ef9a64736f6c63430008110033";

type GearStakingV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GearStakingV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GearStakingV3__factory extends ContractFactory {
  constructor(...args: GearStakingV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GearStakingV3";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    _firstEpochTimestamp: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GearStakingV3> {
    return super.deploy(
      _addressProvider,
      _firstEpochTimestamp,
      overrides || {}
    ) as Promise<GearStakingV3>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    _firstEpochTimestamp: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressProvider,
      _firstEpochTimestamp,
      overrides || {}
    );
  }
  override attach(address: string): GearStakingV3 {
    return super.attach(address) as GearStakingV3;
  }
  override connect(signer: Signer): GearStakingV3__factory {
    return super.connect(signer) as GearStakingV3__factory;
  }
  static readonly contractName: "GearStakingV3";

  public readonly contractName: "GearStakingV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GearStakingV3Interface {
    return new utils.Interface(_abi) as GearStakingV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GearStakingV3 {
    return new Contract(address, _abi, signerOrProvider) as GearStakingV3;
  }
}

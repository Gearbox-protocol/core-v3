/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AccountFactoryV3,
  AccountFactoryV3Interface,
} from "../AccountFactoryV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotCreditManagerException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditAccountIsInUseException",
    type: "error",
  },
  {
    inputs: [],
    name: "MasterCreditAccountAlreadyDeployedException",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisteredCreditManagerOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "masterCreditAccount",
        type: "address",
      },
    ],
    name: "AddCreditManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "DeployCreditAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "ReturnCreditAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "TakeCreditAccount",
    type: "event",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditManager",
        type: "address",
      },
    ],
    name: "addCreditManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractsRegister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "rescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    name: "returnCreditAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "takeCreditAccount",
    outputs: [
      {
        internalType: "address",
        name: "creditAccount",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516118553803806118558339818101604052602081101561003357600080fd5b505180808061004181610168565b604051632bdad0e360e11b8152621050d360ea1b6004820152600060248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa158015610092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b69190610192565b6001600160a01b0316608052508190506100cf81610168565b604051632bdad0e360e11b81527121a7a72a2920a1aa29afa922a3a4a9aa22a960711b6004820152600160248201526001600160a01b038316906357b5a1c690604401602060405180830381865afa15801561012f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101539190610192565b6001600160a01b031660a052506101c2915050565b6001600160a01b03811661018f57604051635919af9760e11b815260040160405180910390fd5b50565b6000602082840312156101a457600080fd5b81516001600160a01b03811681146101bb57600080fd5b9392505050565b60805160a0516116606101f5600039600081816101b50152610c5b01526000818161020f0152610b9f01526116606000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637a0c7b211161005b5780637a0c7b21146101b057806389b77b3e146101d7578063de2873591461020a578063e26b2f631461023157600080fd5b806321d184561461008d5780633c4927ec146100d957806354fd4d50146101715780636a42b8f81461018c575b600080fd5b6100b0600480360360408110156100a357600080fd5b5080359060200135610264565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61016f600480360360608110156100ef57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561013057600080fd5b82018360208201111561014257600080fd5b8035906020019184600183028401116401000000008311171561016457600080fd5b5090925090506104d5565b005b61017a61012c81565b60408051918252519081900360200190f35b6101966203f48081565b6040805164ffffffffff9092168252519081900360200190f35b6100b07f000000000000000000000000000000000000000000000000000000000000000081565b61016f600480360360208110156101ed57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106e5565b6100b07f000000000000000000000000000000000000000000000000000000000000000081565b61016f6004803603602081101561024757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108be565b336000908152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff16806102c2576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815464ffffffffff740100000000000000000000000000000000000000008204811691790100000000000000000000000000000000000000000000000000900416811480610353575033600090815260016020526040902081640100000000811061032f5761032f610c99565b015474010000000000000000000000000000000000000000900464ffffffffff1642105b156103ac5761036182610a08565b604051909450339073ffffffffffffffffffffffffffffffffffffffff8616907fe1b644b6334c18193b2f9111182fd3cf0af58bf954cd9949a56ef6a486a120e190600090a3610489565b3360009081526001602052604090208164010000000081106103d0576103d0610c99565b015433600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff909116945081640100000000811061041057610410610c99565b0180547fffffffffffffff0000000000000000000000000000000000000000000000000016905582547401000000000000000000000000000000000000000080820464ffffffffff90811660010116027fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff919091161783555b604051339073ffffffffffffffffffffffffffffffffffffffff8616907f98b5155c93d7cea03235a2f37b8da764be2e15649b032ccb5cbbfe61cd71629990600090a350505092915050565b6104dd610ad4565b60008473ffffffffffffffffffffffffffffffffffffffff1663c12c21c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d602081101561054057600080fd5b5051905061054d81610b15565b60008173ffffffffffffffffffffffffffffffffffffffff16633c5bc3b2876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505061010060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6101008110156105d357600080fd5b5060e00151905073ffffffffffffffffffffffffffffffffffffffff811615610628576040517f3b941fe400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663c5ecfed78686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b50505050505050505050565b336000908152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff16610742576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016203f480426107789190610cc8565b64ffffffffff908116909152336000908152600160205260409020835490917901000000000000000000000000000000000000000000000000009091041664010000000081106107ca576107ca610c99565b82519101805460209093015173ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffff00000000000000000000000000000000000000000000000000909416939093177401000000000000000000000000000000000000000064ffffffffff9485160217905582547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff81167901000000000000000000000000000000000000000000000000009182900484166001019093160291909117825560405133918416907fe8d6fd8171676387a50d82e1751b2f078b786ff0700ed1877049c66f5b150d8390600090a35050565b6108c6610ad4565b806108d081610b15565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260208190526040902054161561092f576040517fc8ed8adc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260405161093e90610c8c565b73ffffffffffffffffffffffffffffffffffffffff909116815260405190819003602001906000f080158015610978573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff8481166000818152602081815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001694861694851790558151938452905193945090927f837f8321879761d39749a08e7aaca7841729ada6ac050818f4c30b6c82560a299281900390910190a2505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610acf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b610add33610b57565b610b13576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610b1e81610c13565b610b54576040517fbc6a488a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6040517f5f259aba00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635f259aba906024015b602060405180830381865afa158015610be9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0d9190610d14565b92915050565b6040517f6fbc6f6b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636fbc6f6b90602401610bcc565b6108ed80610d3e83390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b64ffffffffff818116838216019080821115610d0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b600060208284031215610d2657600080fd5b81518015158114610d3657600080fd5b939250505056fe60c060405234801561001057600080fd5b506040516108ed3803806108ed8339818101604052602081101561003357600080fd5b50516001600160a01b031660a0523360805260805160a0516108756100786000396000818161019901526104580152600081816101e9015261035e01526108756000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c45a015511610050578063c45a0155146101e4578063c5ecfed71461020b578063d1660f991461029a57600080fd5b80631cff79cd1461007757806354fd4d5014610179578063c12c21c014610194575b600080fd5b6101046004803603604081101561008d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100c557600080fd5b8201836020820111156100d757600080fd5b803590602001918460018302840111640100000000831117156100f957600080fd5b5090925090506102dd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013e578181015183820152602001610126565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018261012c81565b60408051918252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6102986004803603604081101561022157600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561025957600080fd5b82018360208201111561026b57600080fd5b8035906020019184600183028401116401000000008311171561028d57600080fd5b509092509050610346565b005b610298600480360360608110156102b057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610412565b60606102e7610440565b61033e83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8816929150506104b1565b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146103b5576040517f8b63087400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040c82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8716929150506104b1565b50505050565b61041a610440565b61043b73ffffffffffffffffffffffffffffffffffffffff841683836104fc565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146104af576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60606104f5838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061055e565b9392505050565b610528837fa9059cbb00000000000000000000000000000000000000000000000000000000848461067c565b61043b576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060824710156105f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161061e91906107d2565b60006040518083038185875af1925050503d806000811461065b576040519150601f19603f3d011682016040523d82523d6000602084013e610660565b606091505b5091509150610671878383876106cf565b979650505050505050565b60006040518481528360048201528260248201526020600060448360008a5af1915050801561033e573d80156106be57600160005114601f3d111691506106c6565b6000863b1191505b50949350505050565b6060831561076557825160000361075e5773ffffffffffffffffffffffffffffffffffffffff85163b61075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ec565b508161033e565b61033e838381511561077a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec91906107ee565b60005b838110156107c95781810151838201526020016107b1565b50506000910152565b600082516107e48184602087016107ae565b9190910192915050565b602081526000825180602084015261080d8160408501602087016107ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220e0e6fc027adf682d09ce17c81346b2bd9be5036d1c4e329828bf26f2c0dadb3164736f6c63430008110033a264697066735822122041a1cd4628b239714902ecb466a19bd44af77061d6cb25c533ec4541e438515c64736f6c63430008110033";

type AccountFactoryV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountFactoryV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountFactoryV3__factory extends ContractFactory {
  constructor(...args: AccountFactoryV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AccountFactoryV3";
  }

  override deploy(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountFactoryV3> {
    return super.deploy(
      addressProvider,
      overrides || {}
    ) as Promise<AccountFactoryV3>;
  }
  override getDeployTransaction(
    addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(addressProvider, overrides || {});
  }
  override attach(address: string): AccountFactoryV3 {
    return super.attach(address) as AccountFactoryV3;
  }
  override connect(signer: Signer): AccountFactoryV3__factory {
    return super.connect(signer) as AccountFactoryV3__factory;
  }
  static readonly contractName: "AccountFactoryV3";

  public readonly contractName: "AccountFactoryV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountFactoryV3Interface {
    return new utils.Interface(_abi) as AccountFactoryV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountFactoryV3 {
    return new Contract(address, _abi, signerOrProvider) as AccountFactoryV3;
  }
}

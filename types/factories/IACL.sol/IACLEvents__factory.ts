/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IACLEvents,
  IACLEventsInterface,
} from "../../IACL.sol/IACLEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "PausableAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "PausableAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "UnpausableAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "UnpausableAdminRemoved",
    type: "event",
  },
] as const;

export class IACLEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IACLEventsInterface {
    return new utils.Interface(_abi) as IACLEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IACLEvents {
    return new Contract(address, _abi, signerOrProvider) as IACLEvents;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CreditAccountV3,
  CreditAccountV3Interface,
} from "../CreditAccountV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotAccountFactoryException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotCreditManagerException",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "rescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108ed3803806108ed8339818101604052602081101561003357600080fd5b50516001600160a01b031660a0523360805260805160a0516108756100786000396000818161019901526104580152600081816101e9015261035e01526108756000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c45a015511610050578063c45a0155146101e4578063c5ecfed71461020b578063d1660f991461029a57600080fd5b80631cff79cd1461007757806354fd4d5014610179578063c12c21c014610194575b600080fd5b6101046004803603604081101561008d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100c557600080fd5b8201836020820111156100d757600080fd5b803590602001918460018302840111640100000000831117156100f957600080fd5b5090925090506102dd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013e578181015183820152602001610126565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018261012c81565b60408051918252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6102986004803603604081101561022157600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561025957600080fd5b82018360208201111561026b57600080fd5b8035906020019184600183028401116401000000008311171561028d57600080fd5b509092509050610346565b005b610298600480360360608110156102b057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610412565b60606102e7610440565b61033e83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8816929150506104b1565b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146103b5576040517f8b63087400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040c82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff8716929150506104b1565b50505050565b61041a610440565b61043b73ffffffffffffffffffffffffffffffffffffffff841683836104fc565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146104af576040517f1f51116700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60606104f5838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061055e565b9392505050565b610528837fa9059cbb00000000000000000000000000000000000000000000000000000000848461067c565b61043b576040517ffb7f507900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060824710156105f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161061e91906107d2565b60006040518083038185875af1925050503d806000811461065b576040519150601f19603f3d011682016040523d82523d6000602084013e610660565b606091505b5091509150610671878383876106cf565b979650505050505050565b60006040518481528360048201528260248201526020600060448360008a5af1915050801561033e573d80156106be57600160005114601f3d111691506106c6565b6000863b1191505b50949350505050565b6060831561076557825160000361075e5773ffffffffffffffffffffffffffffffffffffffff85163b61075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ec565b508161033e565b61033e838381511561077a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec91906107ee565b60005b838110156107c95781810151838201526020016107b1565b50506000910152565b600082516107e48184602087016107ae565b9190910192915050565b602081526000825180602084015261080d8160408501602087016107ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220e0e6fc027adf682d09ce17c81346b2bd9be5036d1c4e329828bf26f2c0dadb3164736f6c63430008110033";

type CreditAccountV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreditAccountV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreditAccountV3__factory extends ContractFactory {
  constructor(...args: CreditAccountV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CreditAccountV3";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreditAccountV3> {
    return super.deploy(
      _creditManager,
      overrides || {}
    ) as Promise<CreditAccountV3>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, overrides || {});
  }
  override attach(address: string): CreditAccountV3 {
    return super.attach(address) as CreditAccountV3;
  }
  override connect(signer: Signer): CreditAccountV3__factory {
    return super.connect(signer) as CreditAccountV3__factory;
  }
  static readonly contractName: "CreditAccountV3";

  public readonly contractName: "CreditAccountV3";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreditAccountV3Interface {
    return new utils.Interface(_abi) as CreditAccountV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreditAccountV3 {
    return new Contract(address, _abi, signerOrProvider) as CreditAccountV3;
  }
}

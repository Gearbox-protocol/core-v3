/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PolicyManagerInternal,
  PolicyManagerInternalInterface,
} from "../PolicyManagerInternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnpausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "NewController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "group",
        type: "string",
      },
    ],
    name: "SetGroup",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetPolicy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "CHECK_EXACT_VALUE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MAX_CHANGE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MAX_PCT_CHANGE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MAX_VALUE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MIN_CHANGE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MIN_PCT_CHANGE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHECK_MIN_VALUE_FLAG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "paramName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "checkPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "checkPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
    ],
    name: "disablePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "getGroup",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
    ],
    name: "getPolicy",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "flags",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "exactValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referencePoint",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "referencePointUpdatePeriod",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "referencePointTimestampLU",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "minPctChange",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxPctChange",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "minChange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxChange",
            type: "uint256",
          },
        ],
        internalType: "struct Policy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "group",
        type: "string",
      },
    ],
    name: "setGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "policyHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "flags",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "exactValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referencePoint",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "referencePointUpdatePeriod",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "referencePointTimestampLU",
            type: "uint40",
          },
          {
            internalType: "uint16",
            name: "minPctChange",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxPctChange",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "minChange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxChange",
            type: "uint256",
          },
        ],
        internalType: "struct Policy",
        name: "initialPolicy",
        type: "tuple",
      },
    ],
    name: "setPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PolicyManagerInternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolicyManagerInternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolicyManagerInternal__factory extends ContractFactory {
  constructor(...args: PolicyManagerInternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PolicyManagerInternal";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolicyManagerInternal> {
    return super.deploy(
      _addressProvider,
      overrides || {}
    ) as Promise<PolicyManagerInternal>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): PolicyManagerInternal {
    return super.attach(address) as PolicyManagerInternal;
  }
  override connect(signer: Signer): PolicyManagerInternal__factory {
    return super.connect(signer) as PolicyManagerInternal__factory;
  }
  static readonly contractName: "PolicyManagerInternal";

  public readonly contractName: "PolicyManagerInternal";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolicyManagerInternalInterface {
    return new utils.Interface(_abi) as PolicyManagerInternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolicyManagerInternal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolicyManagerInternal;
  }
}

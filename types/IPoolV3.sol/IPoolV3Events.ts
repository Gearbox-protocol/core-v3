/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface IPoolV3EventsInterface extends utils.Interface {
  functions: {};

  events: {
    "AddCreditManager(address)": EventFragment;
    "Borrow(address,address,uint256)": EventFragment;
    "IncurUncoveredLoss(address,uint256)": EventFragment;
    "Refer(address,uint256,uint256)": EventFragment;
    "Repay(address,uint256,uint256,uint256)": EventFragment;
    "SetCreditManagerDebtLimit(address,uint256)": EventFragment;
    "SetInterestRateModel(address)": EventFragment;
    "SetPoolQuotaKeeper(address)": EventFragment;
    "SetTotalDebtLimit(uint256)": EventFragment;
    "SetWithdrawFee(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddCreditManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Borrow"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IncurUncoveredLoss"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Refer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Repay"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetCreditManagerDebtLimit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetInterestRateModel"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetPoolQuotaKeeper"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTotalDebtLimit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetWithdrawFee"): EventFragment;
}

export interface AddCreditManagerEventObject {
  creditManager: string;
}
export type AddCreditManagerEvent = TypedEvent<
  [string],
  AddCreditManagerEventObject
>;

export type AddCreditManagerEventFilter =
  TypedEventFilter<AddCreditManagerEvent>;

export interface BorrowEventObject {
  creditManager: string;
  creditAccount: string;
  amount: BigNumber;
}
export type BorrowEvent = TypedEvent<
  [string, string, BigNumber],
  BorrowEventObject
>;

export type BorrowEventFilter = TypedEventFilter<BorrowEvent>;

export interface IncurUncoveredLossEventObject {
  creditManager: string;
  loss: BigNumber;
}
export type IncurUncoveredLossEvent = TypedEvent<
  [string, BigNumber],
  IncurUncoveredLossEventObject
>;

export type IncurUncoveredLossEventFilter =
  TypedEventFilter<IncurUncoveredLossEvent>;

export interface ReferEventObject {
  onBehalfOf: string;
  referralCode: BigNumber;
  amount: BigNumber;
}
export type ReferEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  ReferEventObject
>;

export type ReferEventFilter = TypedEventFilter<ReferEvent>;

export interface RepayEventObject {
  creditManager: string;
  borrowedAmount: BigNumber;
  profit: BigNumber;
  loss: BigNumber;
}
export type RepayEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  RepayEventObject
>;

export type RepayEventFilter = TypedEventFilter<RepayEvent>;

export interface SetCreditManagerDebtLimitEventObject {
  creditManager: string;
  newLimit: BigNumber;
}
export type SetCreditManagerDebtLimitEvent = TypedEvent<
  [string, BigNumber],
  SetCreditManagerDebtLimitEventObject
>;

export type SetCreditManagerDebtLimitEventFilter =
  TypedEventFilter<SetCreditManagerDebtLimitEvent>;

export interface SetInterestRateModelEventObject {
  newInterestRateModel: string;
}
export type SetInterestRateModelEvent = TypedEvent<
  [string],
  SetInterestRateModelEventObject
>;

export type SetInterestRateModelEventFilter =
  TypedEventFilter<SetInterestRateModelEvent>;

export interface SetPoolQuotaKeeperEventObject {
  newPoolQuotaKeeper: string;
}
export type SetPoolQuotaKeeperEvent = TypedEvent<
  [string],
  SetPoolQuotaKeeperEventObject
>;

export type SetPoolQuotaKeeperEventFilter =
  TypedEventFilter<SetPoolQuotaKeeperEvent>;

export interface SetTotalDebtLimitEventObject {
  limit: BigNumber;
}
export type SetTotalDebtLimitEvent = TypedEvent<
  [BigNumber],
  SetTotalDebtLimitEventObject
>;

export type SetTotalDebtLimitEventFilter =
  TypedEventFilter<SetTotalDebtLimitEvent>;

export interface SetWithdrawFeeEventObject {
  fee: BigNumber;
}
export type SetWithdrawFeeEvent = TypedEvent<
  [BigNumber],
  SetWithdrawFeeEventObject
>;

export type SetWithdrawFeeEventFilter = TypedEventFilter<SetWithdrawFeeEvent>;

export interface IPoolV3Events extends BaseContract {
  contractName: "IPoolV3Events";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPoolV3EventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "AddCreditManager(address)"(
      creditManager?: PromiseOrValue<string> | null
    ): AddCreditManagerEventFilter;
    AddCreditManager(
      creditManager?: PromiseOrValue<string> | null
    ): AddCreditManagerEventFilter;

    "Borrow(address,address,uint256)"(
      creditManager?: PromiseOrValue<string> | null,
      creditAccount?: PromiseOrValue<string> | null,
      amount?: null
    ): BorrowEventFilter;
    Borrow(
      creditManager?: PromiseOrValue<string> | null,
      creditAccount?: PromiseOrValue<string> | null,
      amount?: null
    ): BorrowEventFilter;

    "IncurUncoveredLoss(address,uint256)"(
      creditManager?: PromiseOrValue<string> | null,
      loss?: null
    ): IncurUncoveredLossEventFilter;
    IncurUncoveredLoss(
      creditManager?: PromiseOrValue<string> | null,
      loss?: null
    ): IncurUncoveredLossEventFilter;

    "Refer(address,uint256,uint256)"(
      onBehalfOf?: PromiseOrValue<string> | null,
      referralCode?: PromiseOrValue<BigNumberish> | null,
      amount?: null
    ): ReferEventFilter;
    Refer(
      onBehalfOf?: PromiseOrValue<string> | null,
      referralCode?: PromiseOrValue<BigNumberish> | null,
      amount?: null
    ): ReferEventFilter;

    "Repay(address,uint256,uint256,uint256)"(
      creditManager?: PromiseOrValue<string> | null,
      borrowedAmount?: null,
      profit?: null,
      loss?: null
    ): RepayEventFilter;
    Repay(
      creditManager?: PromiseOrValue<string> | null,
      borrowedAmount?: null,
      profit?: null,
      loss?: null
    ): RepayEventFilter;

    "SetCreditManagerDebtLimit(address,uint256)"(
      creditManager?: PromiseOrValue<string> | null,
      newLimit?: null
    ): SetCreditManagerDebtLimitEventFilter;
    SetCreditManagerDebtLimit(
      creditManager?: PromiseOrValue<string> | null,
      newLimit?: null
    ): SetCreditManagerDebtLimitEventFilter;

    "SetInterestRateModel(address)"(
      newInterestRateModel?: PromiseOrValue<string> | null
    ): SetInterestRateModelEventFilter;
    SetInterestRateModel(
      newInterestRateModel?: PromiseOrValue<string> | null
    ): SetInterestRateModelEventFilter;

    "SetPoolQuotaKeeper(address)"(
      newPoolQuotaKeeper?: PromiseOrValue<string> | null
    ): SetPoolQuotaKeeperEventFilter;
    SetPoolQuotaKeeper(
      newPoolQuotaKeeper?: PromiseOrValue<string> | null
    ): SetPoolQuotaKeeperEventFilter;

    "SetTotalDebtLimit(uint256)"(limit?: null): SetTotalDebtLimitEventFilter;
    SetTotalDebtLimit(limit?: null): SetTotalDebtLimitEventFilter;

    "SetWithdrawFee(uint256)"(fee?: null): SetWithdrawFeeEventFilter;
    SetWithdrawFee(fee?: null): SetWithdrawFeeEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
